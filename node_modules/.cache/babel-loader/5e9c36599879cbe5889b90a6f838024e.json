{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\runRecord\\\\lxgfj\\\\Index.js\";\nimport React, { Component } from 'react';\nimport Button from '@/components/button';\nimport moment from 'moment';\nimport Info from './Info';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getData = function (_ref) {\n      var startTime = _ref.startTime,\n          endTime = _ref.endTime,\n          poolNumber = _ref.poolNumber;\n\n      if (startTime) {\n        startTime = moment(startTime).format('yyyy-MM-DD 00:00:00');\n      }\n\n      if (endTime) {\n        endTime = moment(endTime).format('yyyy-MM-DD 23:59:59');\n      }\n\n      React.axios.get('api/blower/queryList', {\n        startTime: startTime,\n        endTime: endTime,\n        poolNumber: poolNumber\n      }, function (res) {\n        React.axios.get('api/blower/queryList', {\n          startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"),\n          endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 23:00:00\")\n        }, function (res2) {\n          if (res2.data.length > 0) {\n            res.data.push(res2.data[0]);\n          }\n\n          _this.setState({\n            data: res.data\n          });\n        });\n      });\n    };\n\n    _this.query = function (values) {\n      _this.getData({\n        startTime: values.date[0],\n        endTime: values.date[1],\n        poolNumber: values.poolNumber\n      });\n    };\n\n    _this.onChange = function () {\n      var values = _this.formRef.current.getFieldsValue();\n\n      _this.query(values);\n    };\n\n    _this.info = function () {\n      _this.setState({\n        infoModal: true\n      });\n    };\n\n    _this.cancel = function () {\n      _this.setState({\n        infoModal: false\n      });\n    };\n\n    _this.state = {\n      infoModal: false,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.formRef.current.setFieldsValue({\n        date: [moment(), moment()],\n        poolNumber: '1'\n      });\n      this.getData({\n        startTime: new Date(),\n        endTime: new Date(),\n        poolNumber: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: '时间',\n        align: 'center',\n        render: function render(text, res) {\n          return moment(res.gainTime).format('yyyy-MM-DD HH:mm');\n        }\n      }, {\n        title: '进口压力(Bar)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.inPressure).toFixed(3);\n        }\n      }, {\n        title: '出口压力(Bar)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.outPressure).toFixed(3);\n        }\n      }, {\n        title: '主电机转速(rpm)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.speed).toFixed(1);\n        }\n      }, {\n        title: '测量风量(m³/h)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.volume).toFixed(1);\n        }\n      }, {\n        title: '主机出口温度(℃)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.temperature).toFixed(1);\n        }\n      }, {\n        title: '运行时长(h)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.runtime).toFixed(1);\n        }\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form, {\n        layout: \"inline\",\n        ref: this.formRef,\n        onFinish: this.query,\n        className: \"query-tools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u8BBE\\u5907\\u7F16\\u53F7\",\n        name: \"poolNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        style: {\n          width: '200px'\n        },\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"1#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"2#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, \"3#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, \"4#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, \"5#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, \"6#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, \"7#\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, \"8#\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u65E5\\u671F\",\n        name: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker.RangePicker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \"\\u641C\\u7D22\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        icon: \"chart\",\n        onClick: this.info,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"\\u56FE\\u8868\"))), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        columns: columns,\n        dataSource: this.state.data,\n        bordered: true,\n        pagination: false,\n        rowKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }), this.state.infoModal && /*#__PURE__*/React.createElement(Info, {\n        onCancel: this.cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 38\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/runRecord/lxgfj/Index.js"],"names":["React","Component","Button","moment","Info","Index","props","formRef","createRef","getData","startTime","endTime","poolNumber","format","axios","get","res","add","res2","data","length","push","setState","query","values","date","onChange","current","getFieldsValue","info","infoModal","cancel","state","setFieldsValue","Date","columns","title","align","render","text","gainTime","parseFloat","inPressure","toFixed","outPressure","speed","volume","temperature","runtime","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Select, DatePicker, Table } from 'antd';\r\nimport Button from '@/components/button';\r\nimport moment from 'moment';\r\nimport Info from './Info';\r\nclass Index extends Component {\r\n    formRef = React.createRef();\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            infoModal: false,\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.formRef.current.setFieldsValue({ date: [moment(), moment()], poolNumber: '1' });\r\n        this.getData({ startTime: new Date(), endTime: new Date(), poolNumber: 1 });\r\n    }\r\n    getData = ({ startTime, endTime, poolNumber }) => {\r\n        if (startTime) {\r\n            startTime = moment(startTime).format('yyyy-MM-DD 00:00:00');\r\n        }\r\n        if (endTime) {\r\n            endTime = moment(endTime).format('yyyy-MM-DD 23:59:59');\r\n        }\r\n        React.axios.get('api/blower/queryList', { startTime: startTime, endTime: endTime, poolNumber: poolNumber }, res => {\r\n            React.axios.get('api/blower/queryList', { startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"), endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 23:00:00\") }, res2 => {\r\n                if (res2.data.length > 0) {\r\n                    res.data.push(res2.data[0])\r\n                }\r\n                this.setState({ data: res.data });\r\n            })\r\n        })\r\n    }\r\n    query = (values) => {\r\n        this.getData({ startTime: values.date[0], endTime: values.date[1], poolNumber: values.poolNumber });\r\n    }\r\n    onChange = () => {\r\n        let values = this.formRef.current.getFieldsValue();\r\n        this.query(values);\r\n    }\r\n    info = ()=>{\r\n        this.setState({infoModal: true});\r\n    }\r\n    cancel=()=>{\r\n        this.setState({ infoModal: false });\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '时间',\r\n                align: 'center',\r\n                render: (text, res) => moment(res.gainTime).format('yyyy-MM-DD HH:mm')\r\n            },\r\n            {\r\n                title: '进口压力(Bar)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.inPressure).toFixed(3)\r\n            },\r\n            {\r\n                title: '出口压力(Bar)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.outPressure).toFixed(3)\r\n            },\r\n            {\r\n                title: '主电机转速(rpm)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.speed).toFixed(1)\r\n            },\r\n            {\r\n                title: '测量风量(m³/h)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.volume).toFixed(1)\r\n            },\r\n            {\r\n                title: '主机出口温度(℃)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.temperature).toFixed(1)\r\n            },\r\n            {\r\n                title: '运行时长(h)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.runtime).toFixed(1)\r\n            },\r\n        ]\r\n        return <>\r\n            <Form layout=\"inline\" ref={this.formRef} onFinish={this.query} className=\"query-tools\">\r\n                <Form.Item label=\"设备编号\" name=\"poolNumber\">\r\n                    <Select style={{ width: '200px' }} onChange={this.onChange}>\r\n                        <Select.Option value=\"1\">1#</Select.Option>\r\n                        <Select.Option value=\"2\">2#</Select.Option>\r\n                        <Select.Option value=\"3\">3#</Select.Option>\r\n                        <Select.Option value=\"4\">4#</Select.Option>\r\n                        <Select.Option value=\"5\">5#</Select.Option>\r\n                        <Select.Option value=\"6\">6#</Select.Option>\r\n                        <Select.Option value=\"7\">7#</Select.Option>\r\n                        <Select.Option value=\"8\">8#</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"日期\" name=\"date\">\r\n                    <DatePicker.RangePicker/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" icon=\"search\">搜索</Button>&nbsp;\r\n                    <Button type=\"primary\" icon=\"chart\" onClick={this.info}>图表</Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <Table size=\"small\" columns={columns} dataSource={this.state.data} bordered pagination={false} rowKey=\"id\" />\r\n\r\n            {this.state.infoModal && <Info onCancel={this.cancel}/>}\r\n        </>;\r\n    }\r\n}\r\n \r\nexport default Index;"]},"metadata":{},"sourceType":"module"}