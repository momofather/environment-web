{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/breadcrumb/style\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\inventory\\\\outWarehouse\\\\components\\\\SelectGoods.js\";\nimport React, { Component } from \"react\";\nimport Table from \"@/components/table\";\nimport Button from \"@/components/button\";\n\nvar SelectGoods = /*#__PURE__*/function (_Component) {\n  _inherits(SelectGoods, _Component);\n\n  function SelectGoods(props) {\n    var _this;\n\n    _classCallCheck(this, SelectGoods);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectGoods).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getUnitList = function () {\n      React.axios.post('api/wmsType/tmaterialtype/queryMaterialTypeList?number=unit', null, function (res) {\n        var obj = {};\n        res.data.forEach(function (item) {\n          obj[item.id] = item.name;\n        });\n\n        _this.setState({\n          units: obj\n        });\n      });\n    };\n\n    _this.onOk = function () {\n      var _this$state = _this.state,\n          selectedRowKeys = _this$state.selectedRowKeys,\n          selectedRows = _this$state.selectedRows;\n\n      _this.props.close(selectedRowKeys, selectedRows);\n    };\n\n    _this.onClose = function () {\n      _this.props.close();\n    };\n\n    _this.selectGoods = function (selectedRow) {\n      var _this$state2 = _this.state,\n          selectedRowKeys = _this$state2.selectedRowKeys,\n          selectedRows = _this$state2.selectedRows;\n\n      if (selectedRow.selected) {\n        selectedRowKeys.push(selectedRow.id);\n        var selectedGoods = {};\n        selectedGoods.inventoryId = selectedRow.id;\n        selectedGoods.name = selectedRow.name;\n        selectedGoods.number = selectedRow.number;\n        selectedGoods.gname = selectedRow.gname;\n        selectedGoods.gtype = selectedRow.gtype;\n        selectedGoods.price = selectedRow.price;\n        selectedGoods.unit = selectedRow.unit;\n        selectedGoods.maxNum = selectedRow.num;\n        selectedGoods.num = 1;\n        selectedGoods.totalprice = selectedRow.price;\n        selectedGoods.houseName = selectedRow.houseName;\n        selectedGoods.houseNumber = selectedRow.houseNumber;\n        selectedGoods.locationName = selectedRow.locationName;\n        selectedGoods.locationNumber = selectedRow.locationNumber;\n        selectedGoods.shelvesName = selectedRow.shelvesName;\n        selectedGoods.shelvesNumber = selectedRow.shelvesNumber;\n        selectedRows.push(selectedGoods);\n        var goodsList = [];\n        selectedRows.forEach(function (item) {\n          goodsList.push(item);\n        });\n\n        _this.setState({\n          selectedRowKeys: selectedRowKeys,\n          selectedRows: goodsList\n        });\n      } else {\n        var deleteKeysIndex = selectedRowKeys.indexOf(selectedRow.id);\n        var delectRowsIndex = 0;\n        selectedRows.forEach(function (item, index) {\n          if (item.inventoryId === selectedRow.id) {\n            delectRowsIndex = index;\n          }\n\n          ;\n        });\n        console.log(delectRowsIndex);\n        selectedRowKeys.splice(deleteKeysIndex, 1);\n        selectedRows.splice(delectRowsIndex, 1);\n        var _goodsList = [];\n        selectedRows.forEach(function (item) {\n          _goodsList.push(item);\n        });\n\n        _this.setState({\n          selectedRowKeys: selectedRowKeys,\n          selectedRows: _goodsList\n        });\n      }\n\n      ;\n    };\n\n    _this.chageNum = function (index, value) {\n      var selectedRows = _this.state.selectedRows;\n      selectedRows[index].num = value;\n      selectedRows[index].totalprice = selectedRows[index].num * selectedRows[index].price;\n\n      _this.setState({\n        selectedRows: selectedRows\n      }); // this.getTotalPrice();\n\n    };\n\n    _this.deleteGoods = function (index) {\n      var selectedRows = _this.state.selectedRows;\n      var newGoodsList = [];\n      selectedRows.splice(index, 1);\n      selectedRows.forEach(function (item) {\n        newGoodsList.push(item);\n      });\n\n      _this.setState({\n        selectedRows: newGoodsList\n      });\n    };\n\n    _this.state = {\n      houseList: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      inventoryList: [],\n      units: {}\n    };\n    return _this;\n  }\n\n  _createClass(SelectGoods, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getUnitList();\n      this.setState({\n        selectedRowKeys: this.props.ids,\n        selectedRows: this.props.list\n      });\n      React.axios.get(\"api/wms/twarehouse/list\", null, function (res) {\n        _this2.setState({\n          houseList: res.data.data\n        });\n      });\n      React.axios.get(\"api/wms/twarehousestock/list\", null, function (res) {\n        _this2.setState({\n          inventoryList: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          selectedRowKeys = _this$state3.selectedRowKeys,\n          inventoryList = _this$state3.inventoryList;\n      var columns = [{\n        title: \"物料名称\",\n        key: \"name\",\n        dataIndex: \"name\"\n      }, {\n        title: \"编号\",\n        key: \"number\",\n        dataIndex: \"number\"\n      }, {\n        title: \"物料种类\",\n        key: \"gname\",\n        dataIndex: \"gname\"\n      }, {\n        title: \"库存数量\",\n        key: \"num\",\n        dataIndex: \"num\"\n      }, {\n        title: \"单价\",\n        key: \"price\",\n        dataIndex: \"price\",\n        render: function render(text, record) {\n          return \"\".concat(record.price, \"\\u5143/\").concat(_this3.state.units[record.unit]);\n        }\n      }, {\n        title: \"所在位置\",\n        render: function render(text, record) {\n          return /*#__PURE__*/React.createElement(_Breadcrumb, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }\n          }, record.houseName), /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }\n          }, record.locationName), /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }\n          }, record.shelvesName));\n        }\n      }, {\n        title: \"备注\",\n        key: \"remark\",\n        dataIndex: \"remark\"\n      }];\n      var selectedTableColumns = [{\n        title: \"物料编号\",\n        key: \"number\",\n        dataIndex: \"number\"\n      }, {\n        title: \"物料名称\",\n        key: \"name\",\n        dataIndex: \"name\"\n      }, {\n        title: \"单价\",\n        key: \"price\",\n        dataIndex: \"price\",\n        render: function render(text, record) {\n          return \"\".concat(record.price, \"\\u5143/\").concat(_this3.state.units[record.unit]);\n        }\n      }, {\n        title: \"出库位置\",\n        render: function render(text, record) {\n          return /*#__PURE__*/React.createElement(_Breadcrumb, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }\n          }, record.houseName), /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }\n          }, record.locationName), /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }\n          }, record.shelvesName));\n        }\n      }, {\n        title: \"数量\",\n        render: function render(text, record, index) {\n          return /*#__PURE__*/React.createElement(_InputNumber, {\n            value: record.num,\n            onChange: _this3.chageNum.bind(_this3, index),\n            min: 1,\n            max: record.maxNum,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 47\n            }\n          });\n        }\n      }, {\n        title: \"金额\",\n        key: \"totalprice\",\n        dataIndex: \"totalprice\"\n      }, {\n        title: \"操作\",\n        width: \"100px\",\n        render: function render(text, record, index) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            size: \"small\",\n            danger: true,\n            onClick: _this3.deleteGoods.bind(_this3, index),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"iconfont icon-shanchudefuben\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 113\n            }\n          }), \"\\u5220\\u9664\"));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(_Modal, {\n        title: \"\\u9009\\u62E9\\u7269\\u6599\",\n        visible: true,\n        onOk: this.onOk,\n        onCancel: this.onClose,\n        width: 1080,\n        maskClosable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, this.state.inventoryList.length !== 0 && /*#__PURE__*/React.createElement(Table, {\n        rowKey: \"id\",\n        columns: columns,\n        data: inventoryList,\n        number: false,\n        selectedRowKeys: selectedRowKeys,\n        onSelectKeys: function onSelectKeys() {},\n        onSelect: this.selectGoods,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(_Divider, {\n        orientation: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, \"\\u5DF2\\u9009\\u62E9\"), /*#__PURE__*/React.createElement(Table, {\n        rowKey: \"inventoryId\",\n        columns: selectedTableColumns,\n        data: this.state.selectedRows,\n        number: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SelectGoods;\n}(Component);\n\n;\nexport default SelectGoods;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/inventory/outWarehouse/components/SelectGoods.js"],"names":["React","Component","Table","Button","SelectGoods","props","formRef","createRef","getUnitList","axios","post","res","obj","data","forEach","item","id","name","setState","units","onOk","state","selectedRowKeys","selectedRows","close","onClose","selectGoods","selectedRow","selected","push","selectedGoods","inventoryId","number","gname","gtype","price","unit","maxNum","num","totalprice","houseName","houseNumber","locationName","locationNumber","shelvesName","shelvesNumber","goodsList","deleteKeysIndex","indexOf","delectRowsIndex","index","console","log","splice","chageNum","value","deleteGoods","newGoodsList","houseList","inventoryList","ids","list","get","columns","title","key","dataIndex","render","text","record","selectedTableColumns","bind","width","length"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport {Modal,InputNumber,Breadcrumb,Divider} from \"antd\";\r\n\r\nimport Table from \"@/components/table\";\r\nimport Button from \"@/components/button\";\r\n\r\nclass SelectGoods extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            houseList:[],\r\n            selectedRowKeys:[],\r\n            selectedRows:[],\r\n            inventoryList:[],\r\n            units: {}\r\n        };\r\n    };\r\n\r\n    formRef = React.createRef();\r\n\r\n    componentDidMount(){\r\n        this.getUnitList();\r\n        this.setState({selectedRowKeys:this.props.ids,selectedRows:this.props.list});\r\n        React.axios.get(\"api/wms/twarehouse/list\",null,res => {\r\n            this.setState({houseList:res.data.data})\r\n        });\r\n        React.axios.get(\"api/wms/twarehousestock/list\",null,res => {\r\n            this.setState({inventoryList:res.data.data});\r\n        });\r\n    };\r\n\r\n    // 获取计量单位\r\n    getUnitList=()=>{\r\n        React.axios.post('api/wmsType/tmaterialtype/queryMaterialTypeList?number=unit',null,res=>{\r\n            let obj = {};\r\n            res.data.forEach(item=>{\r\n                obj[item.id] = item.name;\r\n            })\r\n            this.setState({units: obj});\r\n        })\r\n    }\r\n\r\n    onOk = () => {\r\n        const {selectedRowKeys,selectedRows} = this.state;\r\n        this.props.close(selectedRowKeys,selectedRows);\r\n    };\r\n\r\n    /**\r\n     * 关闭模态框\r\n     */\r\n    onClose = () => {\r\n        this.props.close();\r\n    };\r\n\r\n    selectGoods = (selectedRow) => {\r\n        let {selectedRowKeys,selectedRows} = this.state;\r\n        if(selectedRow.selected){\r\n            selectedRowKeys.push(selectedRow.id);\r\n            let selectedGoods = {};\r\n            selectedGoods.inventoryId = selectedRow.id;\r\n            selectedGoods.name = selectedRow.name;\r\n            selectedGoods.number = selectedRow.number;\r\n            selectedGoods.gname = selectedRow.gname;\r\n            selectedGoods.gtype = selectedRow.gtype;\r\n            selectedGoods.price = selectedRow.price;\r\n            selectedGoods.unit = selectedRow.unit;\r\n            selectedGoods.maxNum = selectedRow.num;\r\n            selectedGoods.num = 1;\r\n            selectedGoods.totalprice = selectedRow.price;\r\n            selectedGoods.houseName = selectedRow.houseName;\r\n            selectedGoods.houseNumber = selectedRow.houseNumber;\r\n            selectedGoods.locationName = selectedRow.locationName;\r\n            selectedGoods.locationNumber = selectedRow.locationNumber;\r\n            selectedGoods.shelvesName = selectedRow.shelvesName;\r\n            selectedGoods.shelvesNumber = selectedRow.shelvesNumber;\r\n            selectedRows.push(selectedGoods);\r\n            let goodsList = [];\r\n            selectedRows.forEach((item) => {\r\n                goodsList.push(item);\r\n            });\r\n            this.setState({selectedRowKeys,selectedRows:goodsList});\r\n        }else{\r\n            let deleteKeysIndex = selectedRowKeys.indexOf(selectedRow.id);\r\n            let delectRowsIndex = 0;\r\n            selectedRows.forEach((item,index) => {\r\n                if(item.inventoryId === selectedRow.id){\r\n                    delectRowsIndex = index;\r\n                };\r\n            });\r\n            console.log(delectRowsIndex);\r\n            selectedRowKeys.splice(deleteKeysIndex,1);\r\n            selectedRows.splice(delectRowsIndex,1);\r\n            let goodsList = [];\r\n            selectedRows.forEach((item) => {\r\n                goodsList.push(item);\r\n            });\r\n            this.setState({selectedRowKeys,selectedRows:goodsList});\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @todo 改变物料数量\r\n     */\r\n     chageNum = (index,value) => {\r\n        let {selectedRows} = this.state;\r\n        selectedRows[index].num = value;\r\n        selectedRows[index].totalprice = selectedRows[index].num * selectedRows[index].price;\r\n        this.setState({selectedRows});\r\n        // this.getTotalPrice();\r\n    };\r\n\r\n    /**\r\n     * @todo 删除物料\r\n     */\r\n     deleteGoods = (index) => {\r\n        let {selectedRows} = this.state;\r\n        let newGoodsList = [];\r\n        selectedRows.splice(index,1);\r\n        selectedRows.forEach((item) => {\r\n            newGoodsList.push(item);\r\n        });\r\n        this.setState({selectedRows:newGoodsList});\r\n    };\r\n\r\n    render(){\r\n        const {selectedRowKeys,inventoryList} = this.state;\r\n\r\n        const columns = [\r\n            {\r\n                title:\"物料名称\",\r\n                key:\"name\",\r\n                dataIndex:\"name\",\r\n            },\r\n            {\r\n                title:\"编号\",\r\n                key:\"number\",\r\n                dataIndex:\"number\",\r\n            },\r\n            {\r\n                title:\"物料种类\",\r\n                key:\"gname\",\r\n                dataIndex:\"gname\",\r\n            },\r\n            {\r\n                title:\"库存数量\",\r\n                key:\"num\",\r\n                dataIndex:\"num\",\r\n            },\r\n            {\r\n                title:\"单价\",\r\n                key:\"price\",\r\n                dataIndex:\"price\",\r\n                render:(text,record) => {\r\n                    return `${record.price}元/${this.state.units[record.unit]}`;\r\n                },\r\n            },\r\n            {\r\n                title:\"所在位置\",\r\n                render:(text,record) =>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>{record.houseName}</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{record.locationName}</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{record.shelvesName}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                ,\r\n            },\r\n            {\r\n                title:\"备注\",\r\n                key:\"remark\",\r\n                dataIndex:\"remark\",\r\n            },\r\n        ];\r\n\r\n        const selectedTableColumns = [\r\n            {\r\n                title:\"物料编号\",\r\n                key:\"number\",\r\n                dataIndex:\"number\",\r\n            },\r\n            {\r\n                title:\"物料名称\",\r\n                key:\"name\",\r\n                dataIndex:\"name\",\r\n            },\r\n            {\r\n                title:\"单价\",\r\n                key:\"price\",\r\n                dataIndex:\"price\",\r\n                render:(text,record) => {\r\n                    return `${record.price}元/${this.state.units[record.unit]}`;\r\n                },\r\n            },\r\n            {\r\n                title:\"出库位置\",\r\n                render:(text,record) =>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>{record.houseName}</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{record.locationName}</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{record.shelvesName}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                ,\r\n            },\r\n            {\r\n                title:\"数量\",\r\n                render:(text,record,index) => <InputNumber value={record.num} onChange={this.chageNum.bind(this,index)} min={1} max={record.maxNum}/>,\r\n            },\r\n            {\r\n                title:\"金额\",\r\n                key:\"totalprice\",\r\n                dataIndex:\"totalprice\",\r\n            },\r\n            {\r\n                title:\"操作\",\r\n                width:\"100px\",\r\n                render:(text,record,index) => {\r\n                    return(\r\n                        <>\r\n                            <Button type=\"link\" size=\"small\" danger onClick={this.deleteGoods.bind(this,index)}><span className=\"iconfont icon-shanchudefuben\"/>删除</Button>\r\n                        </>\r\n                    );\r\n                },\r\n            },\r\n        ];\r\n\r\n        return(\r\n            <Modal\r\n                title=\"选择物料\"\r\n                visible={true}\r\n                onOk={this.onOk}\r\n                onCancel={this.onClose}\r\n                width={1080}\r\n                maskClosable={false}\r\n            >\r\n                {this.state.inventoryList.length !== 0 &&\r\n                    <Table\r\n                    rowKey=\"id\"\r\n                    columns={columns}\r\n                    data={inventoryList}\r\n                    number={false}\r\n                    selectedRowKeys={selectedRowKeys}\r\n                    onSelectKeys={() => {}}\r\n                    onSelect={this.selectGoods}\r\n                />\r\n                }\r\n                <Divider orientation=\"left\">已选择</Divider>\r\n                <Table\r\n                    rowKey=\"inventoryId\"\r\n                    columns={selectedTableColumns}\r\n                    data={this.state.selectedRows}\r\n                    number={false}\r\n                />\r\n            </Modal>\r\n        );\r\n    };\r\n};\r\nexport default SelectGoods;"]},"metadata":{},"sourceType":"module"}