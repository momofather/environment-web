{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\inventory\\\\inWarehouse\\\\components\\\\SelectGoods.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar SelectGoods = /*#__PURE__*/function (_Component) {\n  _inherits(SelectGoods, _Component);\n\n  function SelectGoods(props) {\n    var _this;\n\n    _classCallCheck(this, SelectGoods);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectGoods).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.onOk = function () {\n      _this.formRef.current.validateFields().then(function (values, errors) {\n        if (!errors) {\n          var _this$state = _this.state,\n              goodsList = _this$state.goodsList,\n              houseName = _this$state.houseName,\n              locationName = _this$state.locationName,\n              shelvesName = _this$state.shelvesName;\n          var reGoodsList = {};\n          goodsList.forEach(function (item) {\n            if (item.id === values.id) {\n              reGoodsList.name = item.name;\n              reGoodsList.number = item.number;\n              reGoodsList.gname = item.gname;\n              reGoodsList.gtype = item.gtype;\n              reGoodsList.price = item.price;\n              reGoodsList.unit = item.unit;\n              reGoodsList.num = values.num;\n              reGoodsList.totalprice = values.num * item.price;\n              reGoodsList.houseName = houseName;\n              reGoodsList.houseNumber = _this.formRef.current.getFieldValue(\"houseNumber\");\n              reGoodsList.locationName = locationName;\n              reGoodsList.locationNumber = _this.formRef.current.getFieldValue(\"locationNumber\");\n              reGoodsList.shelvesName = shelvesName;\n              reGoodsList.shelvesNumber = _this.formRef.current.getFieldValue(\"shelvesNumber\");\n            }\n\n            ;\n          });\n\n          _this.props.close(reGoodsList);\n        }\n\n        ;\n      });\n    };\n\n    _this.onClose = function () {\n      _this.props.close();\n    };\n\n    _this.selectHouse = function (value, event) {\n      _this.formRef.current.setFieldsValue({\n        locationName: \"\",\n        locationNumber: [],\n        shelvesName: \"\",\n        shelvesNumber: []\n      });\n\n      React.axios.get(\"api/wms/twarehouselocation/list?houseNumber=\".concat(value), null, function (res) {\n        _this.setState({\n          locationList: res.data.data\n        });\n      });\n\n      _this.setState({\n        houseName: event.children,\n        houseId: event.key\n      });\n    };\n\n    _this.selectLocation = function (value, event) {\n      _this.formRef.current.setFieldsValue({\n        shelvesName: \"\",\n        shelvesNumber: []\n      });\n\n      React.axios.get(\"api/wms/twarehouseshelves/list?houseNumber=\".concat(_this.formRef.current.getFieldValue(\"houseNumber\"), \"&locationNumber=\").concat(value), null, function (res) {\n        _this.setState({\n          shelvesList: res.data.data\n        });\n      });\n\n      _this.setState({\n        locationName: event.children,\n        locationId: event.key\n      });\n    };\n\n    _this.selectshelves = function (value, event) {\n      _this.setState({\n        shelvesName: event.children\n      });\n    };\n\n    _this.state = {\n      goodsList: [],\n      selectGoods: {},\n      houseName: \"\",\n      houseId: \"\",\n      houseList: [],\n      locationName: \"\",\n      locationId: \"\",\n      locationList: [],\n      shelvesName: \"\",\n      shelvesList: []\n    };\n    return _this;\n  }\n\n  _createClass(SelectGoods, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      React.axios.get(\"api/wms/twarehousegoods/list\", null, function (res) {\n        _this2.setState({\n          goodsList: res.data.data\n        });\n      });\n      React.axios.get(\"api/wms/twarehouse/list\", null, function (res) {\n        _this2.setState({\n          houseList: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          goodsList = _this$state2.goodsList,\n          houseList = _this$state2.houseList,\n          locationList = _this$state2.locationList,\n          shelvesList = _this$state2.shelvesList;\n      var formLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          },\n          md: {\n            span: 10\n          },\n          lg: {\n            span: 6\n          },\n          xl: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          },\n          md: {\n            span: 14\n          },\n          lg: {\n            span: 18\n          },\n          xl: {\n            span: 20\n          }\n        }\n      };\n      return /*#__PURE__*/React.createElement(_Modal, {\n        title: \"\\u9009\\u62E9\\u7269\\u6599\",\n        visible: true,\n        onOk: this.onOk,\n        onCancel: this.onClose,\n        maskClosable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form, Object.assign({\n        ref: this.formRef\n      }, formLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u7269\\u6599\",\n        name: \"id\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"物料不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u7269\\u6599\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, goodsList.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }\n        }, item.name);\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u6570\\u91CF\",\n        name: \"num\",\n        initialValue: 1,\n        rules: [{\n          required: true,\n          message: \"物料不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_InputNumber, {\n        placeholder: \"\\u6570\\u91CF\",\n        min: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u5165\\u5E93\\u4ED3\\u5E93\",\n        name: \"houseNumber\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"入库仓库不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u5165\\u5E93\\u4ED3\\u5E93\",\n        onChange: this.selectHouse,\n        notFoundContent: \"\\u6682\\u65E0\\u6570\\u636E\\uFF0C\\u8BF7\\u5148\\u6DFB\\u52A0\\u4ED3\\u5E93\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, houseList.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.number,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }\n        }, item.name);\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u5165\\u5E93\\u533A\\u57DF\",\n        name: \"locationNumber\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"入库区域不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u5165\\u5E93\\u533A\\u57DF\",\n        onChange: this.selectLocation,\n        notFoundContent: this.state.houseName ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }\n        }, \"\\u6682\\u65E0\\u6570\\u636E\\uFF0C\\u8BF7\\u5148\", /*#__PURE__*/React.createElement(Link, {\n          to: \"/\".concat(React.Version, \"/inventory/warehouseLocation/list/\").concat(this.state.houseId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }\n        }, \"\\u6DFB\\u52A0\\u533A\\u57DF\")) : \"请先选择仓库\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, locationList.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.number,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }\n        }, item.name);\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u5165\\u5E93\\u8D27\\u67B6\",\n        name: \"shelvesNumber\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"入库货架不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u5165\\u5E93\\u8D27\\u67B6\",\n        onChange: this.selectshelves,\n        notFoundContent: this.state.locationName ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }\n        }, \"\\u6682\\u65E0\\u6570\\u636E\\uFF0C\\u8BF7\\u5148\", /*#__PURE__*/React.createElement(Link, {\n          to: \"/\".concat(React.Version, \"/inventory/warehouseShelves/list/\").concat(this.state.houseId, \"/\").concat(this.state.locationId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 37\n          }\n        }, \"\\u6DFB\\u52A0\\u8D27\\u67B6\")) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 34\n          }\n        }, \"\\u8BF7\\u5148\\u9009\\u62E9\\u4ED3\\u5E93\\u3001\\u533A\\u57DF\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      }, shelvesList.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.number,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }\n        }, item.name);\n      })))));\n    }\n  }]);\n\n  return SelectGoods;\n}(Component);\n\n;\nexport default SelectGoods;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/inventory/inWarehouse/components/SelectGoods.js"],"names":["React","Component","Link","SelectGoods","props","formRef","createRef","onOk","current","validateFields","then","values","errors","state","goodsList","houseName","locationName","shelvesName","reGoodsList","forEach","item","id","name","number","gname","gtype","price","unit","num","totalprice","houseNumber","getFieldValue","locationNumber","shelvesNumber","close","onClose","selectHouse","value","event","setFieldsValue","axios","get","res","setState","locationList","data","children","houseId","key","selectLocation","shelvesList","locationId","selectshelves","selectGoods","houseList","formLayout","labelCol","xs","span","sm","md","lg","xl","wrapperCol","required","message","map","Version"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAGA,SAAQC,IAAR,QAAmB,kBAAnB;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAMA,KAAN;AADc,UAgBlBC,OAhBkB,GAgBRL,KAAK,CAACM,SAAN,EAhBQ;;AAAA,UA2BlBC,IA3BkB,GA2BX,YAAM;AACT,YAAKF,OAAL,CAAaG,OAAb,CAAqBC,cAArB,GAAsCC,IAAtC,CAA2C,UAACC,MAAD,EAAQC,MAAR,EAAmB;AAC1D,YAAG,CAACA,MAAJ,EAAW;AAAA,4BACgD,MAAKC,KADrD;AAAA,cACAC,SADA,eACAA,SADA;AAAA,cACUC,SADV,eACUA,SADV;AAAA,cACoBC,YADpB,eACoBA,YADpB;AAAA,cACiCC,WADjC,eACiCA,WADjC;AAEP,cAAIC,WAAW,GAAG,EAAlB;AACAJ,UAAAA,SAAS,CAACK,OAAV,CAAkB,UAACC,IAAD,EAAU;AACxB,gBAAGA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACU,EAAtB,EAAyB;AACrBH,cAAAA,WAAW,CAACI,IAAZ,GAAmBF,IAAI,CAACE,IAAxB;AACAJ,cAAAA,WAAW,CAACK,MAAZ,GAAqBH,IAAI,CAACG,MAA1B;AACAL,cAAAA,WAAW,CAACM,KAAZ,GAAoBJ,IAAI,CAACI,KAAzB;AACAN,cAAAA,WAAW,CAACO,KAAZ,GAAoBL,IAAI,CAACK,KAAzB;AACAP,cAAAA,WAAW,CAACQ,KAAZ,GAAoBN,IAAI,CAACM,KAAzB;AACAR,cAAAA,WAAW,CAACS,IAAZ,GAAmBP,IAAI,CAACO,IAAxB;AACAT,cAAAA,WAAW,CAACU,GAAZ,GAAkBjB,MAAM,CAACiB,GAAzB;AACAV,cAAAA,WAAW,CAACW,UAAZ,GAAyBlB,MAAM,CAACiB,GAAP,GAAaR,IAAI,CAACM,KAA3C;AACAR,cAAAA,WAAW,CAACH,SAAZ,GAAwBA,SAAxB;AACAG,cAAAA,WAAW,CAACY,WAAZ,GAA0B,MAAKzB,OAAL,CAAaG,OAAb,CAAqBuB,aAArB,CAAmC,aAAnC,CAA1B;AACAb,cAAAA,WAAW,CAACF,YAAZ,GAA2BA,YAA3B;AACAE,cAAAA,WAAW,CAACc,cAAZ,GAA6B,MAAK3B,OAAL,CAAaG,OAAb,CAAqBuB,aAArB,CAAmC,gBAAnC,CAA7B;AACAb,cAAAA,WAAW,CAACD,WAAZ,GAA0BA,WAA1B;AACAC,cAAAA,WAAW,CAACe,aAAZ,GAA4B,MAAK5B,OAAL,CAAaG,OAAb,CAAqBuB,aAArB,CAAmC,eAAnC,CAA5B;AACH;;AAAA;AACJ,WAjBD;;AAkBA,gBAAK3B,KAAL,CAAW8B,KAAX,CAAiBhB,WAAjB;AACH;;AAAA;AACJ,OAxBD;AAyBH,KArDiB;;AAAA,UA0DlBiB,OA1DkB,GA0DR,YAAM;AACZ,YAAK/B,KAAL,CAAW8B,KAAX;AACH,KA5DiB;;AAAA,UAmElBE,WAnEkB,GAmEJ,UAACC,KAAD,EAAOC,KAAP,EAAiB;AAC3B,YAAKjC,OAAL,CAAaG,OAAb,CAAqB+B,cAArB,CAAoC;AAACvB,QAAAA,YAAY,EAAC,EAAd;AAAiBgB,QAAAA,cAAc,EAAC,EAAhC;AAAmCf,QAAAA,WAAW,EAAC,EAA/C;AAAkDgB,QAAAA,aAAa,EAAC;AAAhE,OAApC;;AACAjC,MAAAA,KAAK,CAACwC,KAAN,CAAYC,GAAZ,uDAA+DJ,KAA/D,GAAuE,IAAvE,EAA4E,UAAAK,GAAG,EAAI;AAC/E,cAAKC,QAAL,CAAc;AAACC,UAAAA,YAAY,EAACF,GAAG,CAACG,IAAJ,CAASA;AAAvB,SAAd;AACH,OAFD;;AAGA,YAAKF,QAAL,CAAc;AAAC5B,QAAAA,SAAS,EAACuB,KAAK,CAACQ,QAAjB;AAA0BC,QAAAA,OAAO,EAACT,KAAK,CAACU;AAAxC,OAAd;AACH,KAzEiB;;AAAA,UAgFlBC,cAhFkB,GAgFD,UAACZ,KAAD,EAAOC,KAAP,EAAiB;AAC9B,YAAKjC,OAAL,CAAaG,OAAb,CAAqB+B,cAArB,CAAoC;AAACtB,QAAAA,WAAW,EAAC,EAAb;AAAgBgB,QAAAA,aAAa,EAAC;AAA9B,OAApC;;AACAjC,MAAAA,KAAK,CAACwC,KAAN,CAAYC,GAAZ,sDAA8D,MAAKpC,OAAL,CAAaG,OAAb,CAAqBuB,aAArB,CAAmC,aAAnC,CAA9D,6BAAkIM,KAAlI,GAA0I,IAA1I,EAA+I,UAAAK,GAAG,EAAI;AAClJ,cAAKC,QAAL,CAAc;AAACO,UAAAA,WAAW,EAACR,GAAG,CAACG,IAAJ,CAASA;AAAtB,SAAd;AACH,OAFD;;AAGA,YAAKF,QAAL,CAAc;AAAC3B,QAAAA,YAAY,EAACsB,KAAK,CAACQ,QAApB;AAA6BK,QAAAA,UAAU,EAACb,KAAK,CAACU;AAA9C,OAAd;AACH,KAtFiB;;AAAA,UA6FlBI,aA7FkB,GA6FF,UAACf,KAAD,EAAOC,KAAP,EAAiB;AAC7B,YAAKK,QAAL,CAAc;AAAC1B,QAAAA,WAAW,EAACqB,KAAK,CAACQ;AAAnB,OAAd;AACH,KA/FiB;;AAEd,UAAKjC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAC,EADH;AAEPuC,MAAAA,WAAW,EAAC,EAFL;AAGPtC,MAAAA,SAAS,EAAC,EAHH;AAIPgC,MAAAA,OAAO,EAAC,EAJD;AAKPO,MAAAA,SAAS,EAAC,EALH;AAMPtC,MAAAA,YAAY,EAAC,EANN;AAOPmC,MAAAA,UAAU,EAAC,EAPJ;AAQPP,MAAAA,YAAY,EAAC,EARN;AASP3B,MAAAA,WAAW,EAAC,EATL;AAUPiC,MAAAA,WAAW,EAAC;AAVL,KAAX;AAFc;AAcjB;;;;wCAIkB;AAAA;;AACflD,MAAAA,KAAK,CAACwC,KAAN,CAAYC,GAAZ,CAAgB,8BAAhB,EAA+C,IAA/C,EAAoD,UAAAC,GAAG,EAAI;AACvD,QAAA,MAAI,CAACC,QAAL,CAAc;AAAC7B,UAAAA,SAAS,EAAC4B,GAAG,CAACG,IAAJ,CAASA;AAApB,SAAd;AACH,OAFD;AAGA7C,MAAAA,KAAK,CAACwC,KAAN,CAAYC,GAAZ,CAAgB,yBAAhB,EAA0C,IAA1C,EAA+C,UAAAC,GAAG,EAAI;AAClD,QAAA,MAAI,CAACC,QAAL,CAAc;AAACW,UAAAA,SAAS,EAACZ,GAAG,CAACG,IAAJ,CAASA;AAApB,SAAd;AACH,OAFD;AAGH;;;6BAwEO;AAAA;;AAAA,yBACmD,KAAKhC,KADxD;AAAA,UACGC,SADH,gBACGA,SADH;AAAA,UACawC,SADb,gBACaA,SADb;AAAA,UACuBV,YADvB,gBACuBA,YADvB;AAAA,UACoCM,WADpC,gBACoCA,WADpC;AAGJ,UAAMK,UAAU,GAAC;AACbC,QAAAA,QAAQ,EAAC;AACLC,UAAAA,EAAE,EAAC;AAACC,YAAAA,IAAI,EAAC;AAAN,WADE;AAELC,UAAAA,EAAE,EAAC;AAACD,YAAAA,IAAI,EAAC;AAAN,WAFE;AAGLE,UAAAA,EAAE,EAAC;AAACF,YAAAA,IAAI,EAAC;AAAN,WAHE;AAILG,UAAAA,EAAE,EAAC;AAACH,YAAAA,IAAI,EAAC;AAAN,WAJE;AAKLI,UAAAA,EAAE,EAAC;AAACJ,YAAAA,IAAI,EAAC;AAAN;AALE,SADI;AAQbK,QAAAA,UAAU,EAAC;AACPN,UAAAA,EAAE,EAAC;AAACC,YAAAA,IAAI,EAAC;AAAN,WADI;AAEPC,UAAAA,EAAE,EAAC;AAACD,YAAAA,IAAI,EAAC;AAAN,WAFI;AAGPE,UAAAA,EAAE,EAAC;AAACF,YAAAA,IAAI,EAAC;AAAN,WAHI;AAIPG,UAAAA,EAAE,EAAC;AAACH,YAAAA,IAAI,EAAC;AAAN,WAJI;AAKPI,UAAAA,EAAE,EAAC;AAACJ,YAAAA,IAAI,EAAC;AAAN;AALI;AARE,OAAjB;AAiBA,0BACI;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,OAAO,EAAE,IAFb;AAGI,QAAA,IAAI,EAAE,KAAKnD,IAHf;AAII,QAAA,QAAQ,EAAE,KAAK4B,OAJnB;AAKI,QAAA,YAAY,EAAE,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI;AACI,QAAA,GAAG,EAAE,KAAK9B;AADd,SAEQkD,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAII,0BAAM,IAAN;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,YAAY,EAAE,EAHlB;AAII,QAAA,KAAK,EAAE,CACH;AAACS,UAAAA,QAAQ,EAAC,IAAV;AAAeC,UAAAA,OAAO,EAAC;AAAvB,SADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AACI,QAAA,WAAW,EAAC,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKnD,SAAS,CAACoD,GAAV,CAAc,UAAC9C,IAAD;AAAA,4BACX,4BAAQ,MAAR;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,KAAK,EAAED,IAAI,CAACC,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKD,IAAI,CAACE,IAJV,CADW;AAAA,OAAd,CAHL,CARJ,CAJJ,eAyBI,0BAAM,IAAN;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,YAAY,EAAE,CAHlB;AAII,QAAA,KAAK,EAAE,CACH;AAAC0C,UAAAA,QAAQ,EAAC,IAAV;AAAeC,UAAAA,OAAO,EAAC;AAAvB,SADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AAAa,QAAA,WAAW,EAAC,cAAzB;AAA8B,QAAA,GAAG,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CAzBJ,eAmCI,0BAAM,IAAN;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,QAAA,YAAY,EAAE,EAHlB;AAII,QAAA,KAAK,EAAE,CACH;AAACD,UAAAA,QAAQ,EAAC,IAAV;AAAeC,UAAAA,OAAO,EAAC;AAAvB,SADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AACI,QAAA,WAAW,EAAC,0BADhB;AAEI,QAAA,QAAQ,EAAE,KAAK7B,WAFnB;AAGI,QAAA,eAAe,EAAC,oEAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKkB,SAAS,CAACY,GAAV,CAAc,UAAC9C,IAAD;AAAA,4BACX,4BAAQ,MAAR;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,KAAK,EAAED,IAAI,CAACG,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKH,IAAI,CAACE,IAJV,CADW;AAAA,OAAd,CALL,CARJ,CAnCJ,eA0DI,0BAAM,IAAN;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,IAAI,EAAC,gBAFT;AAGI,QAAA,YAAY,EAAE,EAHlB;AAII,QAAA,KAAK,EAAE,CACH;AAAC0C,UAAAA,QAAQ,EAAC,IAAV;AAAeC,UAAAA,OAAO,EAAC;AAAvB,SADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AACI,QAAA,WAAW,EAAC,0BADhB;AAEI,QAAA,QAAQ,EAAE,KAAKhB,cAFnB;AAGI,QAAA,eAAe,EAAE,KAAKpC,KAAL,CAAWE,SAAX,gBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAEI,oBAAC,IAAD;AAAM,UAAA,EAAE,aAAMf,KAAK,CAACmE,OAAZ,+CAAwD,KAAKtD,KAAL,CAAWkC,OAAnE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,CADa,GAKZ,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKH,YAAY,CAACsB,GAAb,CAAiB,UAAC9C,IAAD;AAAA,4BACd,4BAAQ,MAAR;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,KAAK,EAAED,IAAI,CAACG,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKH,IAAI,CAACE,IAJV,CADc;AAAA,OAAjB,CAVL,CARJ,CA1DJ,eAsFI,0BAAM,IAAN;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,IAAI,EAAC,eAFT;AAGI,QAAA,YAAY,EAAE,EAHlB;AAII,QAAA,KAAK,EAAE,CACH;AAAC0C,UAAAA,QAAQ,EAAC,IAAV;AAAeC,UAAAA,OAAO,EAAC;AAAvB,SADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI;AACI,QAAA,WAAW,EAAC,0BADhB;AAEI,QAAA,QAAQ,EAAE,KAAKb,aAFnB;AAGI,QAAA,eAAe,EAAE,KAAKvC,KAAL,CAAWG,YAAX,gBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAEI,oBAAC,IAAD;AAAM,UAAA,EAAE,aAAMhB,KAAK,CAACmE,OAAZ,8CAAuD,KAAKtD,KAAL,CAAWkC,OAAlE,cAA6E,KAAKlC,KAAL,CAAWsC,UAAxF,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,CADa,gBAKZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKD,WAAW,CAACgB,GAAZ,CAAgB,UAAC9C,IAAD;AAAA,4BACb,4BAAQ,MAAR;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,KAAK,EAAED,IAAI,CAACG,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKH,IAAI,CAACE,IAJV,CADa;AAAA,OAAhB,CAVL,CARJ,CAtFJ,CAPJ,CADJ;AA6HH;;;;EAnPqBrB,S;;AAoPzB;AACD,eAAeE,WAAf","sourcesContent":["import React,{Component} from \"react\";\r\nimport {Modal,Form,Select,InputNumber} from \"antd\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SelectGoods extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            goodsList:[],\r\n            selectGoods:{},\r\n            houseName:\"\",\r\n            houseId:\"\",\r\n            houseList:[],\r\n            locationName:\"\",\r\n            locationId:\"\",\r\n            locationList:[],\r\n            shelvesName:\"\",\r\n            shelvesList:[],\r\n        };\r\n    };\r\n\r\n    formRef = React.createRef();\r\n\r\n    componentDidMount(){\r\n        React.axios.get(\"api/wms/twarehousegoods/list\",null,res => {\r\n            this.setState({goodsList:res.data.data})\r\n        });\r\n        React.axios.get(\"api/wms/twarehouse/list\",null,res => {\r\n            this.setState({houseList:res.data.data});\r\n        });\r\n    };\r\n\r\n    onOk = () => {\r\n        this.formRef.current.validateFields().then((values,errors) => {\r\n            if(!errors){\r\n                const {goodsList,houseName,locationName,shelvesName} = this.state;\r\n                let reGoodsList = {};\r\n                goodsList.forEach((item) => {\r\n                    if(item.id === values.id){\r\n                        reGoodsList.name = item.name;\r\n                        reGoodsList.number = item.number;\r\n                        reGoodsList.gname = item.gname;\r\n                        reGoodsList.gtype = item.gtype;\r\n                        reGoodsList.price = item.price;\r\n                        reGoodsList.unit = item.unit;\r\n                        reGoodsList.num = values.num;\r\n                        reGoodsList.totalprice = values.num * item.price;\r\n                        reGoodsList.houseName = houseName;\r\n                        reGoodsList.houseNumber = this.formRef.current.getFieldValue(\"houseNumber\");\r\n                        reGoodsList.locationName = locationName;\r\n                        reGoodsList.locationNumber = this.formRef.current.getFieldValue(\"locationNumber\");\r\n                        reGoodsList.shelvesName = shelvesName;\r\n                        reGoodsList.shelvesNumber = this.formRef.current.getFieldValue(\"shelvesNumber\");\r\n                    };\r\n                });\r\n                this.props.close(reGoodsList);\r\n            };\r\n        });\r\n    };\r\n\r\n    /**\r\n     * 关闭模态框\r\n     */\r\n    onClose = () => {\r\n        this.props.close();\r\n    };\r\n\r\n    /**\r\n     * @todo 选择入库仓库\r\n     * @param value\r\n     * @param event\r\n     */\r\n    selectHouse = (value,event) => {\r\n        this.formRef.current.setFieldsValue({locationName:\"\",locationNumber:[],shelvesName:\"\",shelvesNumber:[]});\r\n        React.axios.get(`api/wms/twarehouselocation/list?houseNumber=${value}`,null,res => {\r\n            this.setState({locationList:res.data.data});\r\n        });\r\n        this.setState({houseName:event.children,houseId:event.key});\r\n    };\r\n\r\n    /**\r\n     * @todo 选择入库区域\r\n     * @param value\r\n     * @param event\r\n     */\r\n    selectLocation = (value,event) => {\r\n        this.formRef.current.setFieldsValue({shelvesName:\"\",shelvesNumber:[]});\r\n        React.axios.get(`api/wms/twarehouseshelves/list?houseNumber=${this.formRef.current.getFieldValue(\"houseNumber\")}&locationNumber=${value}`,null,res => {\r\n            this.setState({shelvesList:res.data.data});\r\n        });\r\n        this.setState({locationName:event.children,locationId:event.key});\r\n    };\r\n\r\n    /**\r\n     * @todo 选择入库货架\r\n     * @param value\r\n     * @param event\r\n     */\r\n    selectshelves = (value,event) => {\r\n        this.setState({shelvesName:event.children});\r\n    };\r\n\r\n    render(){\r\n        const {goodsList,houseList,locationList,shelvesList} = this.state;\r\n\r\n        const formLayout={\r\n            labelCol:{\r\n                xs:{span:24},\r\n                sm:{span:24},\r\n                md:{span:10},\r\n                lg:{span:6},\r\n                xl:{span:4},\r\n            },\r\n            wrapperCol:{\r\n                xs:{span:24},\r\n                sm:{span:24},\r\n                md:{span:14},\r\n                lg:{span:18},\r\n                xl:{span:20},\r\n            }\r\n        };\r\n\r\n        return(\r\n            <Modal\r\n                title=\"选择物料\"\r\n                visible={true}\r\n                onOk={this.onOk}\r\n                onCancel={this.onClose}\r\n                maskClosable={false}\r\n            >\r\n                <Form\r\n                    ref={this.formRef}\r\n                    {...formLayout}\r\n                >\r\n                    <Form.Item\r\n                        label=\"物料\"\r\n                        name=\"id\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"物料不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"物料\"\r\n                        >\r\n                            {goodsList.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.id}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"数量\"\r\n                        name=\"num\"\r\n                        initialValue={1}\r\n                        rules={[\r\n                            {required:true,message:\"物料不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <InputNumber placeholder=\"数量\" min={1}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"入库仓库\"\r\n                        name=\"houseNumber\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"入库仓库不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"入库仓库\"\r\n                            onChange={this.selectHouse}\r\n                            notFoundContent=\"暂无数据，请先添加仓库\"\r\n                        >\r\n                            {houseList.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.number}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"入库区域\"\r\n                        name=\"locationNumber\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"入库区域不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"入库区域\"\r\n                            onChange={this.selectLocation}\r\n                            notFoundContent={this.state.houseName ? (\r\n                                <div>\r\n                                    暂无数据，请先\r\n                                    <Link to={`/${React.Version}/inventory/warehouseLocation/list/${this.state.houseId}`}>添加区域</Link>\r\n                                </div>\r\n                            ) : (\"请先选择仓库\")}\r\n                        >\r\n                            {locationList.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.number}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"入库货架\"\r\n                        name=\"shelvesNumber\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"入库货架不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"入库货架\"\r\n                            onChange={this.selectshelves}\r\n                            notFoundContent={this.state.locationName ? (\r\n                                <div>\r\n                                    暂无数据，请先\r\n                                    <Link to={`/${React.Version}/inventory/warehouseShelves/list/${this.state.houseId}/${this.state.locationId}`}>添加货架</Link>\r\n                                </div>\r\n                            ) : (<div>请先选择仓库、区域</div>)}\r\n                        >\r\n                            {shelvesList.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.number}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    };\r\n};\r\nexport default SelectGoods;"]},"metadata":{},"sourceType":"module"}