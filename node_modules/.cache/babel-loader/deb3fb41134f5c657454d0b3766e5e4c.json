{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _objectSpread from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\inventory\\\\goods\\\\components\\\\Edit.js\";\nimport React, { Component } from \"react\";\n\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Edit).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getUnitList = function () {\n      React.axios.post('api/wmsType/tmaterialtype/queryMaterialTypeList?number=unit', null, function (res) {\n        _this.setState({\n          units: res.data\n        });\n      });\n    };\n\n    _this.submit = function () {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          tableReload = _this$props.tableReload;\n      var _this$state = _this.state,\n          warehouseName = _this$state.warehouseName,\n          gname = _this$state.gname;\n\n      _this.formRef.current.validateFields().then(function (values, errors) {\n        if (!errors) {\n          if (warehouseName) {\n            values.houseName = warehouseName;\n          }\n\n          ;\n\n          if (gname) {\n            values.gname = gname;\n          }\n\n          ;\n          React.axios.post(id ? \"api/wms/twarehousegoods/update\" : \"api/wms/twarehousegoods/save\", _objectSpread({\n            id: id\n          }, values), function (res) {\n            _this.close();\n\n            tableReload();\n          });\n        }\n\n        ;\n      });\n    };\n\n    _this.close = function () {\n      var close = _this.props.close;\n      close();\n    };\n\n    _this.checkNumber = function (value) {\n      return new Promise(function (resolve, reject) {\n        // 返回一个promise\n        React.axios.get(\"api/wms/twarehousegoods/getNumber/\" + value, null, function (res) {\n          var id = _this.props.id;\n\n          if (res.data) {\n            if (res.data.id === id) {\n              resolve(\"success\");\n            } else {\n              resolve(\"error\");\n            }\n\n            ;\n          } else {\n            resolve(\"success\");\n          }\n\n          ;\n        });\n      });\n    };\n\n    _this.selectType = function (value, event) {\n      _this.setState({\n        gname: event.children\n      });\n    };\n\n    _this.state = {\n      units: [],\n      typeList: [],\n      gname: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.props.id;\n      this.getUnitList();\n      React.axios.post(\"api/wmsType/tmaterialtype/queryMaterialTypeList?number=\" + React.enums.goodTypeCode, \"\", function (res) {\n        _this2.setState({\n          typeList: res.data\n        });\n      });\n\n      if (id) {\n        React.axios.get(\"api/wms/twarehousegoods/info/\" + id, \"\", function (res) {\n          _this2.formRef.current.setFieldsValue(res.data);\n        });\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var id = this.props.id;\n      var _this$state2 = this.state,\n          units = _this$state2.units,\n          typeList = _this$state2.typeList;\n      var formLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          },\n          md: {\n            span: 10\n          },\n          lg: {\n            span: 8\n          },\n          xl: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 24\n          },\n          md: {\n            span: 14\n          },\n          lg: {\n            span: 18\n          },\n          xl: {\n            span: 20\n          }\n        }\n      };\n      return /*#__PURE__*/React.createElement(_Modal, {\n        title: id ? \"修改物料信息\" : \"添加物料\",\n        visible: true,\n        onOk: this.submit,\n        onCancel: this.close,\n        maskClosable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form, Object.assign({}, formLayout, {\n        ref: this.formRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u7269\\u6599\\u79CD\\u7C7B\",\n        name: \"gtype\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"物料种类不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u7269\\u6599\\u79CD\\u7C7B\",\n        onChange: this.selectType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, typeList.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }\n        }, item.name);\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u7269\\u6599\\u540D\\u79F0\",\n        name: \"name\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"物料名称不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"\\u7269\\u6599\\u540D\\u79F0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u7269\\u6599\\u7F16\\u53F7\",\n        name: \"number\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"物料编号不能为空\"\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (value) {\n              _this3.checkNumber(value).then(function (res) {\n                if (res === \"success\") {\n                  callback();\n                } else {\n                  callback(\"编号已存在\");\n                }\n\n                ;\n              });\n            }\n          }\n        }],\n        validateTrigger: \"onBlur\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"\\u7269\\u6599\\u7F16\\u53F7\",\n        disabled: this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u54C1\\u724C\",\n        name: \"brand\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"品牌不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"\\u54C1\\u724C\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u5355\\u4EF7\",\n        name: \"price\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"单价不能为空\"\n        }, {\n          pattern: /^\\d+(\\.\\d+)?$/,\n          message: \"请输入正确的价格\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"\\u5355\\u4EF7\",\n        min: 0,\n        addonAfter: \"\\u5143\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u8BA1\\u91CF\\u5355\\u4F4D\",\n        name: \"unit\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"计量单位不能为空\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"\\u8BA1\\u91CF\\u5355\\u4F4D\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, units.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }\n        }, item.name);\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u5907\\u6CE8\",\n        name: \"remark\",\n        initialValue: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Input.TextArea, {\n        placeholder: \"100\\u4E2A\\u5B57\\u4EE5\\u5185\",\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Edit;\n}(Component);\n\n;\nexport default Edit;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/inventory/goods/components/Edit.js"],"names":["React","Component","Edit","props","formRef","createRef","getUnitList","axios","post","res","setState","units","data","submit","id","tableReload","state","warehouseName","gname","current","validateFields","then","values","errors","houseName","close","checkNumber","value","Promise","resolve","reject","get","selectType","event","children","typeList","enums","goodTypeCode","setFieldsValue","formLayout","labelCol","xs","span","sm","md","lg","xl","wrapperCol","required","message","map","item","name","validator","rule","callback","pattern"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport {Modal,Form,Input,Select} from \"antd\";\r\n\r\nclass Edit extends Component{\r\n    formRef = React.createRef();\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            units:[],\r\n            typeList:[],\r\n            gname:\"\",\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props;\r\n        this.getUnitList();\r\n        React.axios.post(\"api/wmsType/tmaterialtype/queryMaterialTypeList?number=\"+React.enums.goodTypeCode,\"\",res => {\r\n            this.setState({typeList:res.data});\r\n        });\r\n        if(id){\r\n            React.axios.get(\"api/wms/twarehousegoods/info/\"+id,\"\",res => {\r\n                this.formRef.current.setFieldsValue(res.data);\r\n            });\r\n        };\r\n    };\r\n\r\n    // 获取计量单位\r\n    getUnitList=()=>{\r\n        React.axios.post('api/wmsType/tmaterialtype/queryMaterialTypeList?number=unit',null,res=>{\r\n            this.setState({units: res.data});\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @todo 提交表单\r\n     */\r\n    submit = () => {\r\n        const {id,tableReload} = this.props;\r\n        const {warehouseName,gname} = this.state;\r\n        this.formRef.current.validateFields().then((values,errors) => {\r\n            if(!errors){\r\n                if(warehouseName){\r\n                    values.houseName = warehouseName;\r\n                };\r\n                if(gname){\r\n                    values.gname = gname;\r\n                };\r\n                React.axios.post(id ? (\"api/wms/twarehousegoods/update\") : (\"api/wms/twarehousegoods/save\"),{id,...values},res => {\r\n                    this.close();\r\n                    tableReload();\r\n                });\r\n            };\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @todo 关闭组件\r\n     */\r\n    close = () => {\r\n        const {close} = this.props;\r\n        close();\r\n    };\r\n\r\n    /**\r\n     * @todo 校验number唯一性\r\n     */\r\n    checkNumber = (value) => {\r\n        return new Promise((resolve, reject) => {  // 返回一个promise\r\n            React.axios.get(\"api/wms/twarehousegoods/getNumber/\"+value,null,res => {\r\n                const {id} =this.props;\r\n                if(res.data){\r\n                    if(res.data.id === id){\r\n                        resolve(\"success\");\r\n                    }else{\r\n                        resolve(\"error\");\r\n                    };\r\n                }else{\r\n                    resolve(\"success\");\r\n                };\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @todo 选择物料种类\r\n     */\r\n    selectType = (value,event) => {\r\n        this.setState({gname:event.children});\r\n    };\r\n\r\n    render(){\r\n        const {id} = this.props;\r\n        const {units,typeList} = this.state;\r\n\r\n        const formLayout={\r\n            labelCol:{\r\n                xs:{span:24},\r\n                sm:{span:24},\r\n                md:{span:10},\r\n                lg:{span:8},\r\n                xl:{span:4},\r\n            },\r\n            wrapperCol:{\r\n                xs:{span:24},\r\n                sm:{span:24},\r\n                md:{span:14},\r\n                lg:{span:18},\r\n                xl:{span:20},\r\n            }\r\n        };\r\n\r\n        return(\r\n            <Modal\r\n                title={id ? (\"修改物料信息\") : (\"添加物料\")}\r\n                visible={true}\r\n                onOk={this.submit}\r\n                onCancel={this.close}\r\n                maskClosable={false}\r\n            >\r\n                <Form\r\n                    {...formLayout}\r\n                    ref={this.formRef}\r\n                >\r\n                    <Form.Item\r\n                        label=\"物料种类\"\r\n                        name=\"gtype\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"物料种类不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"物料种类\"\r\n                            onChange={this.selectType}\r\n                        >\r\n                            {typeList.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.id}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"物料名称\"\r\n                        name=\"name\"\r\n                        initialValue=\"\"\r\n                        rules={[\r\n                            {required:true,message:\"物料名称不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"物料名称\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"物料编号\"\r\n                        name=\"number\"\r\n                        initialValue=\"\"\r\n                        rules={[\r\n                            {required:true,message:\"物料编号不能为空\"},\r\n                            {validator:(rule,value,callback) => {\r\n                                if(value){\r\n                                    this.checkNumber(value).then((res) => {\r\n                                        if(res === \"success\"){\r\n                                            callback();\r\n                                        }else{\r\n                                            callback(\"编号已存在\");\r\n                                        };\r\n                                    });\r\n                                }\r\n                            }},\r\n                        ]}\r\n                        validateTrigger=\"onBlur\"\r\n                    >\r\n                        <Input placeholder=\"物料编号\" disabled={this.props.id}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"品牌\"\r\n                        name=\"brand\"\r\n                        initialValue=\"\"\r\n                        rules={[\r\n                            {required:true,message:\"品牌不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"品牌\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"单价\"\r\n                        name=\"price\"\r\n                        initialValue=\"\"\r\n                        rules={[\r\n                            {required:true,message:\"单价不能为空\"},\r\n                            {pattern:/^\\d+(\\.\\d+)?$/,message:\"请输入正确的价格\"}\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"单价\"\r\n                            min={0}\r\n                            addonAfter=\"元\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"计量单位\"\r\n                        name=\"unit\"\r\n                        initialValue={[]}\r\n                        rules={[\r\n                            {required:true,message:\"计量单位不能为空\"}\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"计量单位\"\r\n                        >\r\n                            {units.map((item) =>\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.id}\r\n                                >\r\n                                    {item.name}\r\n                                </Select.Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"备注\"\r\n                        name=\"remark\"\r\n                        initialValue=\"\"\r\n                    >\r\n                        <Input.TextArea placeholder=\"100个字以内\" maxLength={100}/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    };\r\n};\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}