{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\reportForm\\\\index.js\";\nimport React, { Component } from 'react';\nimport Button from '@/components/button';\nimport moment from 'moment';\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getData = function (date) {\n      React.axios.get('api/month/plcmonth/queryList', {\n        startTime: moment(date).format('yyyy-MM-01 00:00:00'),\n        endTime: moment(date).endOf('month').format('yyyy-MM-DD 23:59:59')\n      }, function (res) {\n        var inTotal = 0,\n            outTotal = 0,\n            inLight = -1,\n            inLow = -1,\n            outLight = -1,\n            outLow = -1;\n        res.data.forEach(function (item) {\n          inTotal += parseFloat(item.inFlow);\n          outTotal += parseFloat(item.outFlow);\n\n          if (item.inFlow > inLight) {\n            inLight = item.inFlow;\n          }\n\n          if (inLow === -1) {\n            inLow = item.inFlow;\n          } else if (item.inFlow < inLow) {\n            inLow = item.inFlow;\n          }\n\n          if (item.outFlow > outLight) {\n            outLight = item.outFlow;\n          }\n\n          if (outLow === -1) {\n            outLow = item.outFlow;\n          } else if (item.outFlow < outLow) {\n            outLow = item.outFlow;\n          }\n        });\n\n        if (res.data.length > 0) {\n          _this.setState({\n            data: res.data,\n            inAvg: (parseFloat(inTotal) / res.data.length).toFixed(1),\n            inTotal: inTotal.toFixed(1),\n            inLight: parseFloat(inLight).toFixed(1),\n            inLow: parseFloat(inLow).toFixed(1),\n            outAvg: (parseFloat(outTotal) / res.data.length).toFixed(1),\n            outTotal: outTotal.toFixed(1),\n            outLight: parseFloat(outLight).toFixed(1),\n            outLow: parseFloat(outLow).toFixed(1)\n          });\n        } else {\n          _this.setState({\n            data: res.data,\n            inAvg: 0,\n            inTotal: 0,\n            inLight: 0,\n            inLow: 0,\n            outAvg: 0,\n            outTotal: 0,\n            outLight: 0,\n            outLow: 0\n          });\n        }\n      });\n    };\n\n    _this.query = function (values) {\n      _this.getData(values.time);\n    };\n\n    _this.footer = function () {\n      return /*#__PURE__*/React.createElement(_Row, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, \"\\u8FDB\\u6C34\\u5E73\\u5747\\u6D41\\u91CF\\uFF1A\", _this.state.inAvg, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, \"\\u8FDB\\u6C34\\u6700\\u4F4E\\u6D41\\u91CF\\uFF1A\", _this.state.inLow, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, \"\\u8FDB\\u6C34\\u6700\\u9AD8\\u6D41\\u91CF\\uFF1A\", _this.state.inLight, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"\\u6708\\u8FDB\\u6C34\\u603B\\u6D41\\u91CF\\uFF1A\", _this.state.inTotal, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, \"\\u51FA\\u6C34\\u5E73\\u5747\\u6D41\\u91CF\\uFF1A\", _this.state.inAvg, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, \"\\u51FA\\u6C34\\u6700\\u4F4E\\u6D41\\u91CF\\uFF1A\", _this.state.inLow, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, \"\\u51FA\\u6C34\\u6700\\u9AD8\\u6D41\\u91CF\\uFF1A\", _this.state.inLight, \"m\\xB3\"), /*#__PURE__*/React.createElement(_Col, {\n        span: 3,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, \"\\u6708\\u51FA\\u6C34\\u603B\\u6D41\\u91CF\\uFF1A\", _this.state.inTotal, \"m\\xB3\"));\n    };\n\n    _this.state = {\n      infoModal: false,\n      data: [],\n      inAvg: 0,\n      inLight: 0,\n      inLow: 0,\n      inTotal: 0,\n      outAvg: 0,\n      outLight: 0,\n      outLow: 0,\n      outTotal: 0\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.formRef.current.setFieldsValue({\n        time: moment()\n      });\n      this.getData(new Date());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: '日期',\n        align: 'center',\n        width: '120px',\n        render: function render(text, res) {\n          return moment(res.gainTime).format('yyyy-MM-DD');\n        }\n      }, {\n        title: '进水流量(m³)',\n        align: 'center',\n        render: function render(text, res) {\n          return res.inFlow;\n        }\n      }, {\n        title: '累计进水流量(m³)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.jslj);\n        }\n      }, {\n        title: '出水流量(m³)',\n        align: 'center',\n        render: function render(text, res) {\n          return res.outFlow;\n        }\n      }, {\n        title: '累计出水流量(m³)',\n        align: 'center',\n        render: function render(text, res) {\n          return parseFloat(res.cslj);\n        }\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form, {\n        layout: \"inline\",\n        ref: this.formRef,\n        onFinish: this.query,\n        className: \"query-tools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u6708\\u4EFD\",\n        name: \"time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, {\n        picker: \"month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"\\u641C\\u7D22\"), \"\\xA0\")), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        columns: columns,\n        dataSource: this.state.data,\n        bordered: true,\n        pagination: false,\n        rowKey: \"id\",\n        footer: this.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/reportForm/index.js"],"names":["React","Component","Button","moment","List","props","formRef","createRef","getData","date","axios","get","startTime","format","endTime","endOf","res","inTotal","outTotal","inLight","inLow","outLight","outLow","data","forEach","item","parseFloat","inFlow","outFlow","length","setState","inAvg","toFixed","outAvg","query","values","time","footer","state","infoModal","current","setFieldsValue","Date","columns","title","align","width","render","text","gainTime","jslj","cslj"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, DatePicker, Table, Row, Col } from 'antd';\r\nimport Button from '@/components/button';\r\nimport moment from 'moment';\r\nclass List extends Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoModal: false,\r\n            data: [],\r\n            inAvg: 0,\r\n            inLight: 0,\r\n            inLow: 0,\r\n            inTotal: 0,\r\n            outAvg: 0,\r\n            outLight: 0,\r\n            outLow: 0,\r\n            outTotal: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.formRef.current.setFieldsValue({ time: moment() });\r\n        this.getData(new Date())\r\n    }\r\n    getData = (date) => {\r\n        React.axios.get('api/month/plcmonth/queryList', { startTime: moment(date).format('yyyy-MM-01 00:00:00'), endTime: moment(date).endOf('month').format('yyyy-MM-DD 23:59:59') }, res => {\r\n            let inTotal = 0, outTotal = 0, inLight = -1, inLow = -1, outLight = -1, outLow = -1;\r\n            res.data.forEach(item=>{\r\n                inTotal += parseFloat(item.inFlow);\r\n                outTotal += parseFloat(item.outFlow);\r\n                if (item.inFlow > inLight){\r\n                    inLight = item.inFlow;\r\n                }\r\n                if (inLow === -1){\r\n                    inLow = item.inFlow;\r\n                } else if (item.inFlow < inLow){\r\n                    inLow = item.inFlow;\r\n                }\r\n                if (item.outFlow > outLight) {\r\n                    outLight = item.outFlow;\r\n                }\r\n                if (outLow === -1) {\r\n                    outLow = item.outFlow;\r\n                } else if (item.outFlow < outLow) {\r\n                    outLow = item.outFlow;\r\n                }\r\n            })\r\n            if (res.data.length>0){\r\n                this.setState({\r\n                    data: res.data,\r\n                    inAvg: (parseFloat(inTotal) / res.data.length).toFixed(1),\r\n                    inTotal: inTotal.toFixed(1),\r\n                    inLight: parseFloat(inLight).toFixed(1),\r\n                    inLow: parseFloat(inLow).toFixed(1),\r\n                    outAvg: (parseFloat(outTotal) / res.data.length).toFixed(1),\r\n                    outTotal: outTotal.toFixed(1),\r\n                    outLight: parseFloat(outLight).toFixed(1),\r\n                    outLow: parseFloat(outLow).toFixed(1)\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    data: res.data,\r\n                    inAvg: 0,\r\n                    inTotal: 0,\r\n                    inLight: 0,\r\n                    inLow: 0,\r\n                    outAvg: 0,\r\n                    outTotal: 0,\r\n                    outLight: 0,\r\n                    outLow: 0,\r\n                });\r\n            }\r\n        })\r\n    }\r\n    query = (values) => {\r\n        this.getData(values.time);\r\n    }\r\n    footer = () => <Row>\r\n        <Col span={3}>进水平均流量：{this.state.inAvg}m³</Col>\r\n        <Col span={3}>进水最低流量：{this.state.inLow}m³</Col>\r\n        <Col span={3}>进水最高流量：{this.state.inLight}m³</Col>\r\n        <Col span={3}>月进水总流量：{this.state.inTotal}m³</Col>\r\n        <Col span={3}>出水平均流量：{this.state.inAvg}m³</Col>\r\n        <Col span={3}>出水最低流量：{this.state.inLow}m³</Col>\r\n        <Col span={3}>出水最高流量：{this.state.inLight}m³</Col>\r\n        <Col span={3}>月出水总流量：{this.state.inTotal}m³</Col>\r\n    </Row>\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '日期',\r\n                align: 'center',\r\n                width: '120px',\r\n                render: (text, res) => moment(res.gainTime).format('yyyy-MM-DD')\r\n            },\r\n            {\r\n                title: '进水流量(m³)',\r\n                align: 'center',\r\n                render: (text, res) => res.inFlow,\r\n            },\r\n            {\r\n                title: '累计进水流量(m³)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.jslj),\r\n            },\r\n            {\r\n                title: '出水流量(m³)',\r\n                align: 'center',\r\n                render: (text, res) => res.outFlow,\r\n            },\r\n            {\r\n                title: '累计出水流量(m³)',\r\n                align: 'center',\r\n                render: (text, res) => parseFloat(res.cslj),\r\n            },\r\n        ]\r\n        return <>\r\n            <Form layout=\"inline\" ref={this.formRef} onFinish={this.query} className=\"query-tools\">\r\n                <Form.Item label=\"月份\" name=\"time\">\r\n                    <DatePicker picker=\"month\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" icon=\"search\">搜索</Button>&nbsp;\r\n                </Form.Item>\r\n            </Form>\r\n            <Table size=\"small\" columns={columns} dataSource={this.state.data} bordered pagination={false} rowKey=\"id\"\r\n                footer={this.footer}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}