{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\dataAnalysis\\\\flow\\\\index.js\";\nimport React, { Component } from 'react';\nimport Button from '@/components/button';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\nimport './index.less';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getData = function (date) {\n      React.axios.get('api/month/plcmonth/queryList', {\n        startTime: moment(date[0]).format('yyyy-MM-01 00:00:00'),\n        endTime: moment(date[1]).endOf('month').format('yyyy-MM-DD 23:59:59')\n      }, function (res) {\n        var inTotal = 0,\n            outTotal = 0,\n            inLight = -1,\n            inLow = -1,\n            outLight = -1,\n            outLow = -1,\n            xAxis = [],\n            inFlow = [],\n            outFlow = [],\n            inFlowTotal = [],\n            outFlowTotal = [];\n        var options = _this.state.options;\n        res.data.forEach(function (item) {\n          xAxis.push(moment(item.gainTime).format('yyyy-MM-DD'));\n          inFlow.push(item.inFlow);\n          outFlow.push(item.outFlow);\n          inFlowTotal.push(item.jslj);\n          outFlowTotal.push(item.cslj);\n          inTotal += parseFloat(item.inFlow);\n          outTotal += parseFloat(item.outFlow);\n\n          if (item.inFlow > inLight) {\n            inLight = item.inFlow;\n          }\n\n          if (inLow === -1) {\n            inLow = item.inFlow;\n          } else if (item.inFlow < inLow) {\n            inLow = item.inFlow;\n          }\n\n          if (item.outFlow > outLight) {\n            outLight = item.outFlow;\n          }\n\n          if (outLow === -1) {\n            outLow = item.outFlow;\n          } else if (item.outFlow < outLow) {\n            outLow = item.outFlow;\n          }\n        });\n\n        if (res.data.length > 0) {\n          _this.setState({\n            data: res.data,\n            inAvg: (parseFloat(inTotal) / res.data.length).toFixed(1),\n            inTotal: inTotal.toFixed(1),\n            inLight: parseFloat(inLight).toFixed(1),\n            inLow: parseFloat(inLow).toFixed(1),\n            outAvg: (parseFloat(outTotal) / res.data.length).toFixed(1),\n            outTotal: outTotal.toFixed(1),\n            outLight: parseFloat(outLight).toFixed(1),\n            outLow: parseFloat(outLow).toFixed(1)\n          });\n        } else {\n          _this.setState({\n            data: res.data,\n            inAvg: 0,\n            inTotal: 0,\n            inLight: 0,\n            inLow: 0,\n            outAvg: 0,\n            outTotal: 0,\n            outLight: 0,\n            outLow: 0\n          });\n        }\n\n        options.xAxis.data = xAxis;\n        options.series = [{\n          name: '进水流量',\n          data: inFlow,\n          type: 'line',\n          smooth: true\n        }, {\n          name: '出水流量',\n          data: outFlow,\n          type: 'line',\n          smooth: true\n        }];\n\n        _this.ref.getEchartsInstance().clear();\n\n        _this.ref.getEchartsInstance().setOption(options);\n      });\n    };\n\n    _this.query = function (values) {\n      _this.getData(values.month);\n    };\n\n    _this.state = {\n      options: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['进水流量', '出水流量'],\n          top: 0\n        },\n        grid: {\n          bottom: 20,\n          top: 30,\n          right: 40,\n          left: 60\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [],\n          axisLabel: {\n            fontSize: 12\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            fontSize: 12\n          }\n        },\n        series: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.formRef.current.setFieldsValue({\n        month: [moment(), moment()]\n      });\n      this.getData([new Date(), new Date()]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form, {\n        layout: \"inline\",\n        ref: this.formRef,\n        onFinish: this.query,\n        className: \"query-tools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        name: \"month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker.RangePicker, {\n        picker: \"month\",\n        onChange: this.getData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, \"\\u67E5\\u8BE2\"))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, this.state.inTotal, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, \"\\u603B\\u8FDB\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, this.state.outTotal, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"\\u603B\\u51FA\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, this.state.inLow, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, \"\\u6700\\u4F4E\\u8FDB\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, this.state.inLight, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, \"\\u6700\\u9AD8\\u8FDB\\u6C34\\u91CF\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, this.state.outLow, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"\\u6700\\u4F4E\\u51FA\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, this.state.outLight, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"\\u6700\\u9AD8\\u51FA\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, this.state.inAvg, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, \"\\u65E5\\u5E73\\u5747\\u8FDB\\u6C34\\u91CF\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value font26\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, this.state.outAvg, \"m\\xB3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \"\\u65E5\\u5E73\\u5747\\u51FA\\u6C34\\u91CF\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(ReactEcharts, {\n        ref: function ref(e) {\n          _this2.ref = e;\n        },\n        option: this.state.options,\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/dataAnalysis/flow/index.js"],"names":["React","Component","Button","ReactEcharts","moment","Index","props","formRef","createRef","getData","date","axios","get","startTime","format","endTime","endOf","res","inTotal","outTotal","inLight","inLow","outLight","outLow","xAxis","inFlow","outFlow","inFlowTotal","outFlowTotal","options","state","data","forEach","item","push","gainTime","jslj","cslj","parseFloat","length","setState","inAvg","toFixed","outAvg","series","name","type","smooth","ref","getEchartsInstance","clear","setOption","query","values","month","tooltip","trigger","axisPointer","legend","top","grid","bottom","right","left","boundaryGap","axisLabel","fontSize","yAxis","current","setFieldsValue","Date","e","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, DatePicker } from 'antd';\r\nimport Button from '@/components/button';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport moment from 'moment';\r\nimport './index.less';\r\nclass Index extends Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: {\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['进水流量', '出水流量'],\r\n                    top: 0\r\n                },\r\n                grid: {\r\n                    bottom: 20,\r\n                    top: 30,\r\n                    right: 40,\r\n                    left: 60\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    boundaryGap: false,\r\n                    data: [],\r\n                    axisLabel: {\r\n                        fontSize: 12,\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    axisLabel: {\r\n                        fontSize: 12,\r\n                    }\r\n                },\r\n                series: []\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.formRef.current.setFieldsValue({ month: [moment(), moment()] });\r\n        this.getData([new Date(),new Date()]);\r\n    }\r\n    getData = (date) => {\r\n        React.axios.get('api/month/plcmonth/queryList', { startTime: moment(date[0]).format('yyyy-MM-01 00:00:00'), endTime: moment(date[1]).endOf('month').format('yyyy-MM-DD 23:59:59') }, res => {\r\n            let inTotal = 0, outTotal = 0, inLight = -1, inLow = -1, outLight = -1, outLow = -1, xAxis = [], inFlow = [], outFlow = [], inFlowTotal = [], outFlowTotal = [];\r\n            let options = this.state.options;\r\n            res.data.forEach(item => {\r\n                xAxis.push(moment(item.gainTime).format('yyyy-MM-DD'));\r\n                inFlow.push(item.inFlow);\r\n                outFlow.push(item.outFlow);\r\n                inFlowTotal.push(item.jslj);\r\n                outFlowTotal.push(item.cslj);\r\n                inTotal += parseFloat(item.inFlow);\r\n                outTotal += parseFloat(item.outFlow);\r\n                if (item.inFlow > inLight) {\r\n                    inLight = item.inFlow;\r\n                }\r\n                if (inLow === -1) {\r\n                    inLow = item.inFlow;\r\n                } else if (item.inFlow < inLow) {\r\n                    inLow = item.inFlow;\r\n                }\r\n                if (item.outFlow > outLight) {\r\n                    outLight = item.outFlow;\r\n                }\r\n                if (outLow === -1) {\r\n                    outLow = item.outFlow;\r\n                } else if (item.outFlow < outLow) {\r\n                    outLow = item.outFlow;\r\n                }\r\n            })\r\n            if (res.data.length > 0) {\r\n                this.setState({\r\n                    data: res.data,\r\n                    inAvg: (parseFloat(inTotal) / res.data.length).toFixed(1),\r\n                    inTotal: inTotal.toFixed(1),\r\n                    inLight: parseFloat(inLight).toFixed(1),\r\n                    inLow: parseFloat(inLow).toFixed(1),\r\n                    outAvg: (parseFloat(outTotal) / res.data.length).toFixed(1),\r\n                    outTotal: outTotal.toFixed(1),\r\n                    outLight: parseFloat(outLight).toFixed(1),\r\n                    outLow: parseFloat(outLow).toFixed(1)\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    data: res.data,\r\n                    inAvg: 0,\r\n                    inTotal: 0,\r\n                    inLight: 0,\r\n                    inLow: 0,\r\n                    outAvg: 0,\r\n                    outTotal: 0,\r\n                    outLight: 0,\r\n                    outLow: 0,\r\n                });\r\n            }\r\n            options.xAxis.data = xAxis;\r\n            options.series = [\r\n                {\r\n                    name: '进水流量',\r\n                    data: inFlow,\r\n                    type: 'line',\r\n                    smooth: true\r\n                },\r\n                {\r\n                    name: '出水流量',\r\n                    data: outFlow,\r\n                    type: 'line',\r\n                    smooth: true\r\n                }\r\n            ];\r\n            this.ref.getEchartsInstance().clear();\r\n            this.ref.getEchartsInstance().setOption(options);\r\n        })\r\n    }\r\n    query = (values) => {\r\n        this.getData(values.month);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"flow\">\r\n                <Form layout=\"inline\" ref={this.formRef} onFinish={this.query} className=\"query-tools\">\r\n                    <Form.Item name=\"month\">\r\n                        <DatePicker.RangePicker picker=\"month\" onChange={this.getData}/>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" icon=\"search\">查询</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <ul>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.inTotal}m³</span>\r\n                        <div className=\"name\">总进水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.outTotal}m³</span>\r\n                        <div className=\"name\">总出水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.inLow}m³</span>\r\n                        <div className=\"name\">最低进水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.inLight}m³</span>\r\n                        <div className=\"name\">最高进水量</div>\r\n                    </li>\r\n                </ul><br/>\r\n                <ul>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.outLow}m³</span>\r\n                        <div className=\"name\">最低出水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.outLight}m³</span>\r\n                        <div className=\"name\">最高出水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.inAvg}m³</span>\r\n                        <div className=\"name\">日平均进水量</div>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"value font26\">{this.state.outAvg}m³</span>\r\n                        <div className=\"name\">日平均出水量</div>\r\n                    </li>\r\n                </ul><br />\r\n                <ReactEcharts ref={(e) => { this.ref = e; }} option={this.state.options} style={{ height: '400px', width: '100%' }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}