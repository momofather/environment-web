{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\runRecord\\\\water\\\\index.js\";\nimport React, { Component } from 'react';\nimport Button from '@/components/button';\nimport moment from 'moment';\nimport Info from './Info'; // 进出水监测\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.formRef = React.createRef();\n\n    _this.getData = function (_ref) {\n      var startTime = _ref.startTime,\n          endTime = _ref.endTime;\n\n      if (startTime) {\n        startTime = moment(startTime).format('yyyy-MM-DD 00:00:00');\n      }\n\n      if (endTime) {\n        endTime = moment(endTime).format('yyyy-MM-DD 23:59:59');\n      }\n\n      React.axios.get('api/inCodOrTp/queryList', {\n        startTime: startTime,\n        endTime: endTime\n      }, function (res) {\n        React.axios.get('api/inCodOrTp/queryList', {\n          startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"),\n          endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\")\n        }, function (res2) {\n          if (res2.data.length > 0) {\n            res.data.push(res2.data[0]);\n          }\n\n          _this.setState({\n            data: res.data\n          });\n        });\n      });\n      React.axios.get('api/inOutWater/queryList', {\n        startTime: startTime,\n        endTime: endTime\n      }, function (res) {\n        React.axios.get('api/inOutWater/queryList', {\n          startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"),\n          endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 23:00:00\")\n        }, function (res2) {\n          if (res2.data.length > 0) {\n            res.data.push(res2.data[0]);\n          }\n\n          res.data.forEach(function (item, i) {\n            if (i === 0) {\n              item.inSdll = 0;\n              item.outSdll = 0;\n            } else {\n              item.inSdll = (parseFloat(item.inJsljll) - parseFloat(res.data[i - 1].inJsljll)).toFixed(1);\n              item.outSdll = (parseFloat(item.outCsljll) - parseFloat(res.data[i - 1].outCsljll)).toFixed(1);\n            }\n          });\n\n          _this.setState({\n            data2: res.data\n          });\n        });\n      });\n    };\n\n    _this.query = function (values) {\n      _this.getData({\n        startTime: values.date[0],\n        endTime: values.date[1]\n      });\n    };\n\n    _this.info = function () {\n      _this.setState({\n        infoModal: true\n      });\n    };\n\n    _this.cancel = function () {\n      _this.setState({\n        infoModal: false\n      });\n    };\n\n    _this.state = {\n      infoModal: false,\n      data: [],\n      data2: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.formRef.current.setFieldsValue({\n        date: [moment(), moment()]\n      });\n      this.getData({\n        startTime: new Date(),\n        endTime: new Date()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: '时间',\n        align: 'center',\n        width: '150px',\n        render: function render(text, res) {\n          return moment(res.gainTime).format('yyyy-MM-DD HH:mm');\n        }\n      }, {\n        title: '进水在线检测',\n        align: 'center',\n        children: [{\n          title: 'COD(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inCod).toFixed(3);\n          }\n        }, {\n          title: 'NH3-N(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inNh3N).toFixed(3);\n          }\n        }, {\n          title: 'TN(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inTn).toFixed(3);\n          }\n        }, {\n          title: 'TP(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inTp).toFixed(3);\n          }\n        }, {\n          title: 'PH',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inPh).toFixed(3);\n          }\n        }, {\n          title: '温度(℃)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inTemperature).toFixed(1);\n          }\n        }]\n      }, {\n        title: '出水在线检测',\n        align: 'center',\n        children: [{\n          title: 'COD(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outCod).toFixed(3);\n          }\n        }, {\n          title: 'NH3-N(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outNh3N).toFixed(3);\n          }\n        }, {\n          title: 'TN(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outTn).toFixed(3);\n          }\n        }, {\n          title: 'TP(mg/L)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outTp).toFixed(3);\n          }\n        }, {\n          title: 'PH',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outPh).toFixed(3);\n          }\n        }, {\n          title: '温度(℃)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outTemperature).toFixed(1);\n          }\n        }]\n      }];\n      var columns2 = [{\n        title: '时间',\n        align: 'center',\n        width: '150px',\n        render: function render(text, res) {\n          return moment(res.gainTime).format('yyyy-MM-DD HH:mm');\n        }\n      }, {\n        title: '进水在线检测',\n        align: 'center',\n        children: [{\n          title: '瞬时流量(m³/s)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inFlow).toFixed(1);\n          }\n        }, {\n          title: '时段流量(m³)',\n          align: 'center',\n          render: function render(text, res) {\n            return res.inSdll;\n          }\n        }, {\n          title: '累计流量(m³)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.inJsljll).toFixed(1);\n          }\n        }]\n      }, {\n        title: '出水在线检测',\n        align: 'center',\n        children: [{\n          title: '瞬时流量(m³/s)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outFlow).toFixed(1);\n          }\n        }, {\n          title: '时段流量(m³)',\n          align: 'center',\n          render: function render(text, res) {\n            return res.outSdll;\n          }\n        }, {\n          title: '累计流量(m³)',\n          align: 'center',\n          render: function render(text, res) {\n            return parseFloat(res.outCsljll).toFixed(1);\n          }\n        }]\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form, {\n        layout: \"inline\",\n        ref: this.formRef,\n        onFinish: this.query,\n        className: \"query-tools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"\\u65E5\\u671F\",\n        name: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker.RangePicker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"\\u641C\\u7D22\"), \"\\xA0\")), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        columns: columns,\n        dataSource: this.state.data,\n        bordered: true,\n        pagination: false,\n        rowKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 122\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        columns: columns2,\n        dataSource: this.state.data2,\n        bordered: true,\n        pagination: false,\n        rowKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }), this.state.infoModal && /*#__PURE__*/React.createElement(Info, {\n        onCancel: this.cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 38\n        }\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/runRecord/water/index.js"],"names":["React","Component","Button","moment","Info","List","props","formRef","createRef","getData","startTime","endTime","format","axios","get","res","add","res2","data","length","push","setState","forEach","item","i","inSdll","outSdll","parseFloat","inJsljll","toFixed","outCsljll","data2","query","values","date","info","infoModal","cancel","state","current","setFieldsValue","Date","columns","title","align","width","render","text","gainTime","children","inCod","inNh3N","inTn","inTp","inPh","inTemperature","outCod","outNh3N","outTn","outTp","outPh","outTemperature","columns2","inFlow","outFlow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, DatePicker, Table } from 'antd';\r\nimport Button from '@/components/button';\r\nimport moment from 'moment';\r\nimport Info from './Info';\r\n// 进出水监测\r\nclass List extends Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoModal: false,\r\n            data: [],\r\n            data2: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.formRef.current.setFieldsValue({ date: [moment(), moment()] });\r\n        this.getData({ startTime: new Date(), endTime: new Date() });\r\n    }\r\n    getData = ({ startTime, endTime }) => {\r\n        if (startTime) {\r\n            startTime = moment(startTime).format('yyyy-MM-DD 00:00:00');\r\n        }\r\n        if (endTime) {\r\n            endTime = moment(endTime).format('yyyy-MM-DD 23:59:59');\r\n        }\r\n        React.axios.get('api/inCodOrTp/queryList', { startTime: startTime, endTime: endTime }, res => {\r\n            React.axios.get('api/inCodOrTp/queryList', { startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"), endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\") }, res2 => {\r\n                if (res2.data.length > 0){\r\n                    res.data.push(res2.data[0])\r\n                }\r\n                this.setState({ data: res.data });\r\n            })\r\n        })\r\n\r\n        React.axios.get('api/inOutWater/queryList', { startTime: startTime, endTime: endTime }, res => {\r\n            React.axios.get('api/inOutWater/queryList', { startTime: moment(startTime).add(1, \"days\").format(\"yyyy-MM-DD 00:00:00\"), endTime: moment(endTime).add(1, \"days\").format(\"yyyy-MM-DD 23:00:00\") }, res2 => {\r\n                if (res2.data.length > 0) {\r\n                    res.data.push(res2.data[0])\r\n                }\r\n                res.data.forEach((item, i) => {\r\n                    if (i === 0) {\r\n                        item.inSdll = 0;\r\n                        item.outSdll = 0;\r\n                    } else {\r\n                        item.inSdll = (parseFloat(item.inJsljll) - parseFloat(res.data[i - 1].inJsljll)).toFixed(1);\r\n                        item.outSdll = (parseFloat(item.outCsljll) - parseFloat(res.data[i - 1].outCsljll)).toFixed(1);\r\n                    }\r\n                })\r\n                this.setState({ data2: res.data });\r\n            })\r\n        })\r\n    }\r\n    query = (values) => {\r\n        this.getData({ startTime: values.date[0], endTime: values.date[1] });\r\n    }\r\n    info = () => {\r\n        this.setState({ infoModal: true });\r\n    }\r\n    cancel = () => {\r\n        this.setState({ infoModal: false });\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '时间',\r\n                align: 'center',\r\n                width: '150px',\r\n                render: (text, res) => moment(res.gainTime).format('yyyy-MM-DD HH:mm')\r\n            },\r\n            {\r\n                title: '进水在线检测',\r\n                align: 'center',\r\n                children: [\r\n                    {\r\n                        title: 'COD(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inCod).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: 'NH3-N(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inNh3N).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: 'TN(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inTn).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: 'TP(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inTp).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: 'PH',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inPh).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: '温度(℃)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inTemperature).toFixed(1),\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '出水在线检测',\r\n                align: 'center',\r\n                children: [\r\n                    {\r\n                        title: 'COD(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outCod).toFixed(3),\r\n\r\n                    },\r\n                    {\r\n                        title: 'NH3-N(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outNh3N).toFixed(3),\r\n\r\n                    },\r\n                    {\r\n                        title: 'TN(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outTn).toFixed(3),\r\n\r\n                    },\r\n                    {\r\n                        title: 'TP(mg/L)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outTp).toFixed(3),\r\n\r\n                    },\r\n                    {\r\n                        title: 'PH',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outPh).toFixed(3),\r\n                    },\r\n                    {\r\n                        title: '温度(℃)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outTemperature).toFixed(1),\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title: '时间',\r\n                align: 'center',\r\n                width: '150px',\r\n                render: (text, res) => moment(res.gainTime).format('yyyy-MM-DD HH:mm')\r\n            },\r\n            {\r\n                title: '进水在线检测',\r\n                align: 'center',\r\n                children: [\r\n                    {\r\n                        title: '瞬时流量(m³/s)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inFlow).toFixed(1),\r\n                    },\r\n                    {\r\n                        title: '时段流量(m³)',\r\n                        align: 'center',\r\n                        render: (text, res) => res.inSdll,\r\n                    },\r\n                    {\r\n                        title: '累计流量(m³)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.inJsljll).toFixed(1),\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: '出水在线检测',\r\n                align: 'center',\r\n                children: [\r\n                    {\r\n                        title: '瞬时流量(m³/s)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outFlow).toFixed(1),\r\n                    },\r\n                    {\r\n                        title: '时段流量(m³)',\r\n                        align: 'center',\r\n                        render: (text, res) => res.outSdll,\r\n                    },\r\n                    {\r\n                        title: '累计流量(m³)',\r\n                        align: 'center',\r\n                        render: (text, res) => parseFloat(res.outCsljll).toFixed(1),\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n        return <>\r\n            <Form layout=\"inline\" ref={this.formRef} onFinish={this.query} className=\"query-tools\">\r\n                <Form.Item label=\"日期\" name=\"date\">\r\n                    <DatePicker.RangePicker />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" icon=\"search\">搜索</Button>&nbsp;\r\n                    {/* <Button type=\"primary\" icon=\"chart\" onClick={this.info}>图表</Button> */}\r\n                </Form.Item>\r\n            </Form>\r\n            <Table size=\"small\" columns={columns} dataSource={this.state.data} bordered pagination={false} rowKey=\"id\" /><br/>\r\n            <Table size=\"small\" columns={columns2} dataSource={this.state.data2} bordered pagination={false} rowKey=\"id\" />\r\n            {this.state.infoModal && <Info onCancel={this.cancel} />}\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}