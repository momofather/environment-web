{"ast":null,"code":"import easingFuncs from './easing';\n\nvar Clip = function () {\n  function Clip(opts) {\n    this._initialized = false;\n    this._startTime = 0;\n    this._pausedTime = 0;\n    this._paused = false;\n    this._life = opts.life || 1000;\n    this._delay = opts.delay || 0;\n    this.loop = opts.loop == null ? false : opts.loop;\n    this.gap = opts.gap || 0;\n    this.easing = opts.easing || 'linear';\n    this.onframe = opts.onframe;\n    this.ondestroy = opts.ondestroy;\n    this.onrestart = opts.onrestart;\n  }\n\n  Clip.prototype.step = function (globalTime, deltaTime) {\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n    if (percent < 0) {\n      percent = 0;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing === 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.onframe && this.onframe(schedule);\n\n    if (percent === 1) {\n      if (this.loop) {\n        this._restart(globalTime);\n\n        this.onrestart && this.onrestart();\n      } else {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Clip.prototype._restart = function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n  };\n\n  Clip.prototype.pause = function () {\n    this._paused = true;\n  };\n\n  Clip.prototype.resume = function () {\n    this._paused = false;\n  };\n\n  return Clip;\n}();\n\nexport default Clip;","map":null,"metadata":{},"sourceType":"module"}