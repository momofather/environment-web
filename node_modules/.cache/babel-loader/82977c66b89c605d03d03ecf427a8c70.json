{"ast":null,"code":"import _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\pages\\\\bigScreen\\\\components\\\\InOutWater.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\n\nvar InOutWater = /*#__PURE__*/function (_Component) {\n  _inherits(InOutWater, _Component);\n\n  function InOutWater(props) {\n    var _this;\n\n    _classCallCheck(this, InOutWater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InOutWater).call(this, props));\n    _this.get12Timer = null;\n    _this.ref = null;\n\n    _this.getData = function () {\n      React.axios.get('api/inCodOrTp/queryList', {\n        startTime: moment(new Date().getTime() - 1000 * 60 * 60 * 24 * 7).format('yyyy-MM-DD 00:00:00'),\n        endTime: moment().format('yyyy-MM-DD 23:00:00')\n      }, function (res) {\n        _this.setState({\n          data: res.data\n        }, function () {\n          _this.onchange(_this.state.active);\n        });\n      });\n      React.axios.get('api/inOutWater/queryList', {\n        startTime: moment(new Date().getTime() - 1000 * 60 * 60 * 24 * 7).format('yyyy-MM-DD 00:00:00'),\n        endTime: moment().format('yyyy-MM-DD 23:00:00')\n      }, function (res) {\n        _this.setState({\n          flow: res.data\n        }, function () {\n          _this.onchange(_this.state.active);\n        });\n      });\n    };\n\n    _this.onchange = function (index) {\n      var xAxisData = [],\n          inCodData = [],\n          outCodData = [],\n          inNh3N = [],\n          outNh3N = [],\n          inTn = [],\n          outTn = [],\n          inTp = [],\n          outTp = [],\n          inPh = [],\n          outPh = [],\n          inFlow = [],\n          outFlow = [],\n          inTemperature = [],\n          outTemperature = [];\n\n      _this.state.data.forEach(function (item) {\n        xAxisData.push(item.gainTime);\n        inCodData.push(item.inCod);\n        outCodData.push(item.outCod);\n        inNh3N.push(item.inNh3N);\n        outNh3N.push(item.outNh3N);\n        inTn.push(item.inTn);\n        outTn.push(item.outTn);\n        inTp.push(item.inTp);\n        outTp.push(item.outTp);\n        inPh.push(item.inPh);\n        outPh.push(item.outPh);\n        inTemperature.push(item.inTemperature);\n        outTemperature.push(item.outTemperature);\n      });\n\n      _this.state.flow.forEach(function (item) {\n        inFlow.push(item.inFlow);\n        outFlow.push(item.outFlow);\n      });\n\n      var options = _this.state.options;\n      options.xAxis.data = xAxisData;\n\n      _this.setState({\n        active: index\n      }, function () {\n        options.series[0].smooth = true;\n        options.series[1].smooth = true;\n\n        if (index === 1) {\n          options.series[0].data = inCodData;\n          options.series[1].data = outCodData;\n          options.series[0].smooth = false;\n          options.series[1].smooth = false;\n        } else if (index === 2) {\n          options.series[0].data = inNh3N;\n          options.series[1].data = outNh3N;\n          options.series[0].smooth = false;\n          options.series[1].smooth = false;\n        } else if (index === 3) {\n          options.series[0].data = inTn;\n          options.series[1].data = outTn;\n        } else if (index === 4) {\n          options.series[0].data = inTp;\n          options.series[1].data = outTp;\n        } else if (index === 5) {\n          options.series[0].data = inPh;\n          options.series[1].data = outPh;\n          options.series[0].smooth = false;\n          options.series[1].smooth = false;\n        } else if (index === 6) {\n          options.series[0].data = inFlow;\n          options.series[1].data = outFlow;\n          options.series[0].smooth = false;\n          options.series[1].smooth = false;\n        } else if (index === 7) {\n          options.series[0].data = inTemperature;\n          options.series[1].data = outTemperature;\n        }\n\n        _this.ref.getEchartsInstance().setOption(options);\n      });\n    };\n\n    _this.state = {\n      active: 1,\n      data: [],\n      flow: [],\n      options: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['进水', '出水'],\n          textStyle: {\n            color: '#FFFFFF'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        dataZoom: [{\n          type: 'inside',\n          start: 0,\n          end: 100\n        }, {\n          start: 0,\n          end: 100\n        }],\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: '#FFFFFF'\n            }\n          },\n          axisLabel: {\n            formatter: function formatter(value) {\n              return \"\".concat(moment(value).format('yyyy-MM-DD'), \"\\n\").concat(moment(value).format('HH:mm'));\n            }\n          },\n          axisPointer: {\n            label: {\n              color: '#000'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#FFFFFF'\n            }\n          },\n          axisPointer: {\n            label: {\n              color: '#000'\n            }\n          }\n        },\n        series: [{\n          name: '进水',\n          type: 'line',\n          data: [],\n          smooth: true\n        }, {\n          name: '出水',\n          type: 'line',\n          data: [],\n          smooth: true\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(InOutWater, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getData();\n      this.get12Timer = setInterval(function () {\n        _this2.getData();\n      }, 1000 * 60 * 10);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.get12Timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 1 ? 'active' : '',\n        onClick: this.onchange.bind(this, 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, \"COD\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 2 ? 'active' : '',\n        onClick: this.onchange.bind(this, 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, \"NH3-N\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 3 ? 'active' : '',\n        onClick: this.onchange.bind(this, 3),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, \"TN\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 4 ? 'active' : '',\n        onClick: this.onchange.bind(this, 4),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, \"TP\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 5 ? 'active' : '',\n        onClick: this.onchange.bind(this, 5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, \"PH\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 7 ? 'active' : '',\n        onClick: this.onchange.bind(this, 7),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, \"\\u6E29\\u5EA6\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.active === 6 ? 'active' : '',\n        onClick: this.onchange.bind(this, 6),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, \"\\u6D41\\u91CF\")), /*#__PURE__*/React.createElement(ReactEcharts, {\n        ref: function ref(e) {\n          _this3.ref = e;\n        },\n        option: this.state.options,\n        style: {\n          height: '500px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return InOutWater;\n}(Component);\n\nexport default InOutWater;","map":{"version":3,"sources":["E:/project/environment-web/src/pages/bigScreen/components/InOutWater.js"],"names":["React","Component","ReactEcharts","moment","InOutWater","props","get12Timer","ref","getData","axios","get","startTime","Date","getTime","format","endTime","res","setState","data","onchange","state","active","flow","index","xAxisData","inCodData","outCodData","inNh3N","outNh3N","inTn","outTn","inTp","outTp","inPh","outPh","inFlow","outFlow","inTemperature","outTemperature","forEach","item","push","gainTime","inCod","outCod","options","xAxis","series","smooth","getEchartsInstance","setOption","tooltip","trigger","axisPointer","type","legend","textStyle","color","grid","left","right","bottom","containLabel","dataZoom","start","end","boundaryGap","axisLine","lineStyle","axisLabel","formatter","value","label","yAxis","name","setInterval","clearInterval","bind","e","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IACMC,U;;;AAGF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AADe,UAFnBC,UAEmB,GAFN,IAEM;AAAA,UADnBC,GACmB,GADb,IACa;;AAAA,UAiGnBC,OAjGmB,GAiGT,YAAM;AACZR,MAAAA,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,yBAAhB,EAA2C;AAAEC,QAAAA,SAAS,EAAER,MAAM,CAAC,IAAIS,IAAJ,GAAWC,OAAX,KAAqB,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,CAApC,CAAN,CAA6CC,MAA7C,CAAoD,qBAApD,CAAb;AAAyFC,QAAAA,OAAO,EAAEZ,MAAM,GAAGW,MAAT,CAAgB,qBAAhB;AAAlG,OAA3C,EAAsL,UAAAE,GAAG,EAAI;AACzL,cAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF,GAAG,CAACE;AAAZ,SAAd,EAAkC,YAAM;AACpC,gBAAKC,QAAL,CAAc,MAAKC,KAAL,CAAWC,MAAzB;AACH,SAFD;AAGH,OAJD;AAKArB,MAAAA,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,0BAAhB,EAA4C;AAAEC,QAAAA,SAAS,EAAER,MAAM,CAAC,IAAIS,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CAA9C,CAAN,CAAuDC,MAAvD,CAA8D,qBAA9D,CAAb;AAAmGC,QAAAA,OAAO,EAAEZ,MAAM,GAAGW,MAAT,CAAgB,qBAAhB;AAA5G,OAA5C,EAAkM,UAAAE,GAAG,EAAI;AACrM,cAAKC,QAAL,CAAc;AAAEK,UAAAA,IAAI,EAAEN,GAAG,CAACE;AAAZ,SAAd,EAAkC,YAAM;AACpC,gBAAKC,QAAL,CAAc,MAAKC,KAAL,CAAWC,MAAzB;AACH,SAFD;AAGH,OAJD;AAKH,KA5GkB;;AAAA,UA8GnBF,QA9GmB,GA8GR,UAACI,KAAD,EAAW;AAClB,UAAIC,SAAS,GAAG,EAAhB;AAAA,UAAoBC,SAAS,GAAG,EAAhC;AAAA,UAAoCC,UAAU,GAAG,EAAjD;AAAA,UAAqDC,MAAM,GAAG,EAA9D;AAAA,UAAkEC,OAAO,GAAG,EAA5E;AAAA,UAAgFC,IAAI,GAAG,EAAvF;AAAA,UAA2FC,KAAK,GAAG,EAAnG;AAAA,UAAuGC,IAAI,GAAG,EAA9G;AAAA,UAAkHC,KAAK,GAAG,EAA1H;AAAA,UAA8HC,IAAI,GAAG,EAArI;AAAA,UAAyIC,KAAK,GAAG,EAAjJ;AAAA,UAAqJC,MAAM,GAAG,EAA9J;AAAA,UAAkKC,OAAO,GAAG,EAA5K;AAAA,UACIC,aAAa,GAAG,EADpB;AAAA,UACwBC,cAAc,GAAG,EADzC;;AAEA,YAAKlB,KAAL,CAAWF,IAAX,CAAgBqB,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC5BhB,QAAAA,SAAS,CAACiB,IAAV,CAAeD,IAAI,CAACE,QAApB;AACAjB,QAAAA,SAAS,CAACgB,IAAV,CAAeD,IAAI,CAACG,KAApB;AACAjB,QAAAA,UAAU,CAACe,IAAX,CAAgBD,IAAI,CAACI,MAArB;AACAjB,QAAAA,MAAM,CAACc,IAAP,CAAYD,IAAI,CAACb,MAAjB;AACAC,QAAAA,OAAO,CAACa,IAAR,CAAaD,IAAI,CAACZ,OAAlB;AACAC,QAAAA,IAAI,CAACY,IAAL,CAAUD,IAAI,CAACX,IAAf;AACAC,QAAAA,KAAK,CAACW,IAAN,CAAWD,IAAI,CAACV,KAAhB;AACAC,QAAAA,IAAI,CAACU,IAAL,CAAUD,IAAI,CAACT,IAAf;AACAC,QAAAA,KAAK,CAACS,IAAN,CAAWD,IAAI,CAACR,KAAhB;AACAC,QAAAA,IAAI,CAACQ,IAAL,CAAUD,IAAI,CAACP,IAAf;AACAC,QAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,CAACN,KAAhB;AACAG,QAAAA,aAAa,CAACI,IAAd,CAAmBD,IAAI,CAACH,aAAxB;AACAC,QAAAA,cAAc,CAACG,IAAf,CAAoBD,IAAI,CAACF,cAAzB;AACH,OAdD;;AAeA,YAAKlB,KAAL,CAAWE,IAAX,CAAgBiB,OAAhB,CAAwB,UAAAC,IAAI,EAAI;AAC5BL,QAAAA,MAAM,CAACM,IAAP,CAAYD,IAAI,CAACL,MAAjB;AACAC,QAAAA,OAAO,CAACK,IAAR,CAAaD,IAAI,CAACJ,OAAlB;AACH,OAHD;;AAIA,UAAIS,OAAO,GAAG,MAAKzB,KAAL,CAAWyB,OAAzB;AACAA,MAAAA,OAAO,CAACC,KAAR,CAAc5B,IAAd,GAAqBM,SAArB;;AACA,YAAKP,QAAL,CAAc;AAAEI,QAAAA,MAAM,EAAEE;AAAV,OAAd,EAAiC,YAAM;AACnCsB,QAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,IAA3B;AACAH,QAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,IAA3B;;AACA,YAAIzB,KAAK,KAAK,CAAd,EAAiB;AACbsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBO,SAAzB;AACAoB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBQ,UAAzB;AACAmB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACAH,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACH,SALD,MAKO,IAAIzB,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBS,MAAzB;AACAkB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBU,OAAzB;AACAiB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACAH,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACH,SALM,MAKA,IAAIzB,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBW,IAAzB;AACAgB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBY,KAAzB;AACH,SAHM,MAGA,IAAIP,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBa,IAAzB;AACAc,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBc,KAAzB;AACH,SAHM,MAGA,IAAIT,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBe,IAAzB;AACAY,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBgB,KAAzB;AACAW,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACAH,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACH,SALM,MAKA,IAAIzB,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBiB,MAAzB;AACAU,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBkB,OAAzB;AACAS,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACAH,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B;AACH,SALM,MAKA,IAAIzB,KAAK,KAAK,CAAd,EAAiB;AACpBsB,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBmB,aAAzB;AACAQ,UAAAA,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkB7B,IAAlB,GAAyBoB,cAAzB;AACH;;AACD,cAAK/B,GAAL,CAAS0C,kBAAT,GAA8BC,SAA9B,CAAwCL,OAAxC;AACH,OAlCD;AAmCH,KAzKkB;;AAEf,UAAKzB,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAETH,MAAAA,IAAI,EAAE,EAFG;AAGTI,MAAAA,IAAI,EAAE,EAHG;AAITuB,MAAAA,OAAO,EAAE;AACLM,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAE;AADG;AAFR,SADJ;AAOLC,QAAAA,MAAM,EAAE;AACJrC,UAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CADF;AAEJsC,UAAAA,SAAS,EAAE;AACPC,YAAAA,KAAK,EAAE;AADA;AAFP,SAPH;AAaLC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFC,UAAAA,KAAK,EAAE,IAFL;AAGFC,UAAAA,MAAM,EAAE,IAHN;AAIFC,UAAAA,YAAY,EAAE;AAJZ,SAbD;AAmBLC,QAAAA,QAAQ,EAAE,CACN;AACIT,UAAAA,IAAI,EAAE,QADV;AAEIU,UAAAA,KAAK,EAAE,CAFX;AAGIC,UAAAA,GAAG,EAAE;AAHT,SADM,EAMN;AACID,UAAAA,KAAK,EAAE,CADX;AAEIC,UAAAA,GAAG,EAAE;AAFT,SANM,CAnBL;AA8BLnB,QAAAA,KAAK,EAAE;AACHQ,UAAAA,IAAI,EAAE,UADH;AAEHY,UAAAA,WAAW,EAAE,KAFV;AAGHhD,UAAAA,IAAI,EAAE,EAHH;AAIHiD,UAAAA,QAAQ,EAAE;AACNC,YAAAA,SAAS,EAAE;AACPX,cAAAA,KAAK,EAAE;AADA;AADL,WAJP;AASHY,UAAAA,SAAS,EAAE;AACPC,YAAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AAClB,+BAAUpE,MAAM,CAACoE,KAAD,CAAN,CAAczD,MAAd,CAAqB,YAArB,CAAV,eAAiDX,MAAM,CAACoE,KAAD,CAAN,CAAczD,MAAd,CAAqB,OAArB,CAAjD;AACH;AAHM,WATR;AAcHuC,UAAAA,WAAW,EAAE;AACTmB,YAAAA,KAAK,EAAE;AACHf,cAAAA,KAAK,EAAE;AADJ;AADE;AAdV,SA9BF;AAkDLgB,QAAAA,KAAK,EAAE;AACHnB,UAAAA,IAAI,EAAE,OADH;AAEHa,UAAAA,QAAQ,EAAE;AACNC,YAAAA,SAAS,EAAE;AACPX,cAAAA,KAAK,EAAE;AADA;AADL,WAFP;AAOHJ,UAAAA,WAAW,EAAE;AACTmB,YAAAA,KAAK,EAAE;AACHf,cAAAA,KAAK,EAAE;AADJ;AADE;AAPV,SAlDF;AA+DLV,QAAAA,MAAM,EAAE,CACJ;AACI2B,UAAAA,IAAI,EAAE,IADV;AAEIpB,UAAAA,IAAI,EAAE,MAFV;AAGIpC,UAAAA,IAAI,EAAE,EAHV;AAII8B,UAAAA,MAAM,EAAE;AAJZ,SADI,EAOJ;AACI0B,UAAAA,IAAI,EAAE,IADV;AAEIpB,UAAAA,IAAI,EAAE,MAFV;AAGIpC,UAAAA,IAAI,EAAE,EAHV;AAII8B,UAAAA,MAAM,EAAE;AAJZ,SAPI;AA/DH;AAJA,KAAb;AAFe;AAqFlB;;;;wCAEkB;AAAA;;AACf,WAAKxC,OAAL;AACA,WAAKF,UAAL,GAAkBqE,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACnE,OAAL;AACH,OAF4B,EAE1B,OAAO,EAAP,GAAY,EAFc,CAA7B;AAGH;;;2CACqB;AAClBoE,MAAAA,aAAa,CAAC,KAAKtE,UAAN,CAAb;AACH;;;6BA4EQ;AAAA;;AACL,0BAAO,uDACH;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAE,KAAKc,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAK,QAAA,SAAS,EAAE,KAAKzD,KAAL,CAAWC,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,EAArD;AAAyD,QAAA,OAAO,EAAE,KAAKF,QAAL,CAAc0D,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CADG,eAUH,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,aAACC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACvE,GAAL,GAAWuE,CAAX;AAAe,SAA3C;AAA6C,QAAA,MAAM,EAAE,KAAK1D,KAAL,CAAWyB,OAAhE;AAAyE,QAAA,KAAK,EAAE;AAAEkC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVG,CAAP;AAYH;;;;EA3LoB/E,S;;AA6LzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport moment from 'moment';\r\nclass InOutWater extends Component {\r\n    get12Timer = null;\r\n    ref = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 1,\r\n            data: [],\r\n            flow: [],\r\n            options: {\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['进水', '出水'],\r\n                    textStyle: {\r\n                        color: '#FFFFFF'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                dataZoom: [\r\n                    {\r\n                        type: 'inside',\r\n                        start: 0,\r\n                        end: 100\r\n                    },\r\n                    {\r\n                        start: 0,\r\n                        end: 100\r\n                    }\r\n                ],\r\n                xAxis: {\r\n                    type: 'category',\r\n                    boundaryGap: false,\r\n                    data: [],\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        formatter: (value) => {\r\n                            return `${moment(value).format('yyyy-MM-DD')}\\n${moment(value).format('HH:mm')}`\r\n                        },\r\n                    },\r\n                    axisPointer: {\r\n                        label: {\r\n                            color: '#000'\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#FFFFFF'\r\n                        }\r\n                    },\r\n                    axisPointer: {\r\n                        label: {\r\n                            color: '#000'\r\n                        }\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '进水',\r\n                        type: 'line',\r\n                        data: [],\r\n                        smooth: true,\r\n                    },\r\n                    {\r\n                        name: '出水',\r\n                        type: 'line',\r\n                        data: [],\r\n                        smooth: true,\r\n                    }\r\n                ]\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n        this.get12Timer = setInterval(() => {\r\n            this.getData();\r\n        }, 1000 * 60 * 10);\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.get12Timer);\r\n    }\r\n\r\n    getData = () => {\r\n        React.axios.get('api/inCodOrTp/queryList', { startTime: moment(new Date().getTime()-1000*60*60*24*7).format('yyyy-MM-DD 00:00:00'), endTime: moment().format('yyyy-MM-DD 23:00:00')}, res => {\r\n            this.setState({ data: res.data }, () => {\r\n                this.onchange(this.state.active);\r\n            });\r\n        })\r\n        React.axios.get('api/inOutWater/queryList', { startTime: moment(new Date().getTime() - 1000 * 60 * 60 * 24 * 7).format('yyyy-MM-DD 00:00:00'), endTime: moment().format('yyyy-MM-DD 23:00:00') }, res => {\r\n            this.setState({ flow: res.data }, () => {\r\n                this.onchange(this.state.active);\r\n            });\r\n        })\r\n    }\r\n\r\n    onchange = (index) => {\r\n        let xAxisData = [], inCodData = [], outCodData = [], inNh3N = [], outNh3N = [], inTn = [], outTn = [], inTp = [], outTp = [], inPh = [], outPh = [], inFlow = [], outFlow = [],\r\n            inTemperature = [], outTemperature = [];\r\n        this.state.data.forEach(item => {\r\n            xAxisData.push(item.gainTime);\r\n            inCodData.push(item.inCod);\r\n            outCodData.push(item.outCod);\r\n            inNh3N.push(item.inNh3N);\r\n            outNh3N.push(item.outNh3N);\r\n            inTn.push(item.inTn);\r\n            outTn.push(item.outTn);\r\n            inTp.push(item.inTp);\r\n            outTp.push(item.outTp);\r\n            inPh.push(item.inPh);\r\n            outPh.push(item.outPh);\r\n            inTemperature.push(item.inTemperature);\r\n            outTemperature.push(item.outTemperature);\r\n        })\r\n        this.state.flow.forEach(item => {\r\n            inFlow.push(item.inFlow);\r\n            outFlow.push(item.outFlow);\r\n        })\r\n        let options = this.state.options;\r\n        options.xAxis.data = xAxisData;\r\n        this.setState({ active: index }, () => {\r\n            options.series[0].smooth = true;\r\n            options.series[1].smooth = true;\r\n            if (index === 1) {\r\n                options.series[0].data = inCodData;\r\n                options.series[1].data = outCodData;\r\n                options.series[0].smooth = false;\r\n                options.series[1].smooth = false;\r\n            } else if (index === 2) {\r\n                options.series[0].data = inNh3N;\r\n                options.series[1].data = outNh3N;\r\n                options.series[0].smooth = false;\r\n                options.series[1].smooth = false;\r\n            } else if (index === 3) {\r\n                options.series[0].data = inTn;\r\n                options.series[1].data = outTn;\r\n            } else if (index === 4) {\r\n                options.series[0].data = inTp;\r\n                options.series[1].data = outTp;\r\n            } else if (index === 5) {\r\n                options.series[0].data = inPh;\r\n                options.series[1].data = outPh;\r\n                options.series[0].smooth = false;\r\n                options.series[1].smooth = false;\r\n            } else if (index === 6) {\r\n                options.series[0].data = inFlow;\r\n                options.series[1].data = outFlow;\r\n                options.series[0].smooth = false;\r\n                options.series[1].smooth = false;\r\n            } else if (index === 7) {\r\n                options.series[0].data = inTemperature;\r\n                options.series[1].data = outTemperature;\r\n            }\r\n            this.ref.getEchartsInstance().setOption(options);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <div className=\"btn\">\r\n                <div className={this.state.active === 1 ? 'active' : ''} onClick={this.onchange.bind(this, 1)}>COD</div>\r\n                <div className={this.state.active === 2 ? 'active' : ''} onClick={this.onchange.bind(this, 2)}>NH3-N</div>\r\n                <div className={this.state.active === 3 ? 'active' : ''} onClick={this.onchange.bind(this, 3)}>TN</div>\r\n                <div className={this.state.active === 4 ? 'active' : ''} onClick={this.onchange.bind(this, 4)}>TP</div>\r\n                <div className={this.state.active === 5 ? 'active' : ''} onClick={this.onchange.bind(this, 5)}>PH</div>\r\n                <div className={this.state.active === 7 ? 'active' : ''} onClick={this.onchange.bind(this, 7)}>温度</div>\r\n                <div className={this.state.active === 6 ? 'active' : ''} onClick={this.onchange.bind(this, 6)}>流量</div>\r\n            </div>\r\n            <ReactEcharts ref={(e) => { this.ref = e; }} option={this.state.options} style={{ height: '500px', width: '100%' }} />\r\n        </>\r\n    }\r\n}\r\nexport default InOutWater;"]},"metadata":{},"sourceType":"module"}