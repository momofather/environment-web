{"ast":null,"code":"import \"antd/es/pagination/style\";\nimport _Pagination from \"antd/es/pagination\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\project\\\\environment-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\project\\\\environment-web\\\\src\\\\components\\\\table\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport './index.less';\n\nvar PageTale = /*#__PURE__*/function (_Component) {\n  _inherits(PageTale, _Component);\n\n  function PageTale() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PageTale);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PageTale)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.params = {};\n    _this.state = {\n      data: {\n        list: [],\n        total: 0\n      },\n      page: 1,\n      limit: 20,\n      parameter: {},\n      params: {},\n      columns: []\n    };\n\n    _this.getList = function (pageNum) {\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.limit;\n\n      _this.props.history.push(_this.props.match.url + '?pageNum=' + pageNum);\n\n      var params_temp = {\n        page: parseInt(pageNum),\n        limit: parseInt(pageSize)\n      };\n\n      _this.setState(params_temp);\n\n      for (var k in _this.params) {\n        params_temp[k] = _this.params[k];\n      }\n\n      if (_this.props.method === 'get') {\n        React.axios.get(_this.props.url, params_temp, function (res) {\n          _this.setState({\n            data: {\n              list: res.data.data,\n              total: res.data.count\n            }\n          });\n        });\n      } else {\n        React.axios.post(_this.props.url, params_temp, function (res) {\n          _this.setState({\n            data: {\n              list: res.data.data,\n              total: res.data.count\n            }\n          });\n        });\n      }\n    };\n\n    _this.reload = function (data) {\n      var params = {};\n\n      for (var k in data) {\n        if (data[k]) {\n          params[k] = data[k];\n        }\n      }\n\n      _this.params = params;\n\n      _this.getList(1);\n    };\n\n    _this.getCatchPage = function () {\n      var page = {\n        pageNum: 1\n      };\n\n      if (_this.props.location.search) {\n        var params = _this.props.location.search.substring(1);\n\n        var array = params.split(\"&\");\n        array.forEach(function (item) {\n          var array2 = item.split(\"=\");\n          page[array2[0]] = array2[1];\n        });\n      }\n\n      return page;\n    };\n\n    return _this;\n  }\n\n  _createClass(PageTale, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.onRef) {\n        this.props.onRef(this);\n      }\n\n      if (this.props.number) {\n        this.props.columns.unshift({\n          title: '序号',\n          width: '60px',\n          align: 'center',\n          render: function render(txt, row, index) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, _this2.props.pager ? (_this2.state.page - 1) * _this2.state.limit + (index + 1) : index + 1);\n          }\n        });\n      }\n\n      this.setState({\n        columns: this.props.columns,\n        selectedRowKeys: this.props.selectedRowKeys\n      });\n\n      if (this.props.data) {\n        this.setState({\n          data: {\n            list: this.props.data,\n            total: this.props.data.length\n          }\n        });\n      } else {\n        var page = this.getCatchPage();\n        this.getList(page.pageNum);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var rowSelection = {\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: function onChange(selectedRowKeys, selectedRowList) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys\n          });\n\n          _this3.props.onSelectKeys(selectedRowKeys, selectedRowList);\n        },\n        onSelect: function onSelect(record, selected) {\n          if (_this3.props.onSelect) {\n            var row = _objectSpread({}, record);\n\n            row.selected = selected;\n\n            _this3.props.onSelect(row);\n          }\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Table, {\n        size: \"small\",\n        locale: {\n          'emptyText': '暂无数据'\n        },\n        pagination: false,\n        rowKey: this.props.rowKey,\n        rowSelection: this.props.onSelectKeys ? rowSelection : null,\n        className: \"type-data\",\n        columns: this.state.columns,\n        dataSource: this.state.data.list,\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), this.props.pager !== false && /*#__PURE__*/React.createElement(_Pagination, {\n        className: \"pagination\",\n        onShowSizeChange: this.getList,\n        onChange: this.getList,\n        pageSize: this.state.limit,\n        defaultCurrent: this.state.page,\n        current: this.state.page,\n        total: this.state.data.total,\n        showQuickJumper: true,\n        showSizeChanger: true,\n        showTotal: function showTotal(total) {\n          return \"\\u5171\".concat(Math.ceil(total / _this3.state.limit), \"\\u9875/\").concat(total, \"\\u6761\\u6570\\u636E\");\n        },\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.data) {\n        return {\n          data: {\n            list: nextProps.data,\n            total: nextProps.data.length\n          }\n        };\n      }\n\n      return null;\n    } // 刷新\n\n  }]);\n\n  return PageTale;\n}(Component);\n\nPageTale.defaultProps = {\n  url: '',\n  // 接口地址\n  data: null,\n  // 表格数据\n  method: 'post',\n  // 请求方式\n  columns: [],\n  // 表头数据\n  onSelectKeys: null,\n  // 选择数据后触发事件\n  selectedRowKeys: [],\n  // 多选时，默认选中的key\n  pager: true,\n  // 是否启用分页，默认启用\n  rowKey: \"id\",\n  number: true\n}; // PageTale.contextTypes = {\n//     router: PropTypes.object.isRequired\n// }\n\nexport default withRouter(PageTale);","map":{"version":3,"sources":["E:/project/environment-web/src/components/table/index.js"],"names":["React","Component","withRouter","PageTale","params","state","data","list","total","page","limit","parameter","columns","getList","pageNum","pageSize","props","history","push","match","url","params_temp","parseInt","setState","k","method","axios","get","res","count","post","reload","getCatchPage","location","search","substring","array","split","forEach","item","array2","onRef","number","unshift","title","width","align","render","txt","row","index","pager","selectedRowKeys","length","rowSelection","onChange","selectedRowList","onSelectKeys","onSelect","record","selected","rowKey","Math","ceil","nextProps","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { Table,Pagination  } from 'antd';\r\nimport './index.less';\r\nclass PageTale extends Component{\r\n    params = {};\r\n    state={\r\n        data: {list:[],total:0},\r\n        page: 1,\r\n        limit: 20,\r\n        parameter: {},\r\n        params:{},\r\n        columns: []\r\n    }\r\n    // 获取列表数据\r\n    getList=(pageNum,pageSize=this.state.limit)=>{\r\n        this.props.history.push(this.props.match.url+'?pageNum='+pageNum);\r\n        let params_temp = {\r\n            page: parseInt(pageNum),\r\n            limit: parseInt(pageSize)\r\n        };\r\n        this.setState(params_temp);\r\n        for(let k in this.params){\r\n            params_temp[k] = this.params[k]\r\n        }\r\n        if(this.props.method==='get'){\r\n            React.axios.get(this.props.url,params_temp,res=>{\r\n                this.setState({data: {list:res.data.data,total:res.data.count}});\r\n            })\r\n        }else{\r\n            React.axios.post(this.props.url,params_temp, res=>{\r\n                this.setState({data: {list:res.data.data,total:res.data.count}});\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.onRef){\r\n            this.props.onRef(this)\r\n        }\r\n        if(this.props.number){\r\n            this.props.columns.unshift({\r\n                title: '序号',\r\n                width: '60px',\r\n                align: 'center',\r\n                render: (txt,row,index)=><>{this.props.pager?(this.state.page-1)*this.state.limit+(index+1):index+1}</>\r\n            })\r\n        }\r\n        \r\n        this.setState({\r\n            columns: this.props.columns,\r\n            selectedRowKeys: this.props.selectedRowKeys\r\n        });\r\n        if(this.props.data){\r\n            this.setState({\r\n                data:{list:this.props.data,total:this.props.data.length},\r\n            })\r\n        }else{\r\n            const page = this.getCatchPage();\r\n            this.getList(page.pageNum);\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        if (nextProps.data) {\r\n            return {\r\n                data: {list:nextProps.data,total:nextProps.data.length}\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    // 刷新\r\n    reload=(data)=>{\r\n        let params = {};\r\n        for(let k in data){\r\n            if(data[k]){\r\n                params[k] = data[k];\r\n            }\r\n        }\r\n        this.params = params;\r\n        this.getList(1)\r\n    }\r\n\r\n    // 获取缓存的页码\r\n    getCatchPage=()=>{\r\n        let page = {pageNum: 1};\r\n        if(this.props.location.search){\r\n            let params = this.props.location.search.substring(1);\r\n            let array = params.split(\"&\");\r\n            array.forEach(item=>{\r\n                let array2 = item.split(\"=\");\r\n                page[array2[0]] = array2[1];\r\n            })\r\n        }\r\n        return page;\r\n    }\r\n    \r\n    render(){\r\n        const rowSelection = {\r\n            selectedRowKeys: this.state.selectedRowKeys,\r\n            onChange: (selectedRowKeys,selectedRowList) => {\r\n                this.setState({selectedRowKeys});\r\n                this.props.onSelectKeys(selectedRowKeys,selectedRowList);\r\n            },\r\n            onSelect: (record, selected)=>{\r\n                if(this.props.onSelect){\r\n                    let row = {...record};\r\n                    row.selected = selected;\r\n                    this.props.onSelect(row);\r\n                }\r\n            }\r\n        };\r\n        return(\r\n            <div className=\"page-table\">\r\n                <Table size=\"small\" locale={{'emptyText': '暂无数据'}} pagination={false} rowKey={this.props.rowKey} rowSelection={this.props.onSelectKeys?rowSelection:null} className=\"type-data\" columns={this.state.columns} dataSource={this.state.data.list} bordered></Table>\r\n                {\r\n                    this.props.pager!==false&&\r\n                    <Pagination \r\n                        className=\"pagination\" \r\n                        onShowSizeChange={this.getList} \r\n                        onChange={this.getList} \r\n                        pageSize={this.state.limit} \r\n                        defaultCurrent={this.state.page}\r\n                        current={this.state.page} \r\n                        total={this.state.data.total}\r\n                        showQuickJumper\r\n                        showSizeChanger\r\n                        showTotal={total => `共${Math.ceil(total/this.state.limit)}页/${total}条数据`}\r\n                        size=\"small\"\r\n                    ></Pagination>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPageTale.defaultProps = {\r\n    url: '', // 接口地址\r\n    data: null, // 表格数据\r\n    method: 'post', // 请求方式\r\n    columns: [], // 表头数据\r\n    onSelectKeys: null, // 选择数据后触发事件\r\n    selectedRowKeys: [], // 多选时，默认选中的key\r\n    pager: true, // 是否启用分页，默认启用\r\n    rowKey: \"id\",\r\n    number: true\r\n}\r\n// PageTale.contextTypes = {\r\n//     router: PropTypes.object.isRequired\r\n// }\r\nexport default withRouter(PageTale);"]},"metadata":{},"sourceType":"module"}